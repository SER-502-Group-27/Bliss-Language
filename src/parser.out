Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD_ASSIGN
    AND
    COLON
    DIV_ASSIGN
    ELIF
    ELSE
    EQUAL
    FOR
    GREATER_EQUAL
    GREATER_THAN
    IF
    IN
    INTEGER
    LESS_EQUAL
    LESS_THAN
    MOD_ASSIGN
    MUL_ASSIGN
    NOT
    NOT_EQUAL
    OR
    PRINT
    RANGE
    STRING
    SUB_ASSIGN
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     statement -> IDENTIFIER ASSIGN expression
Rule 3     expression -> IDENTIFIER
Rule 4     expression -> expression PLUS term
Rule 5     expression -> expression MINUS term
Rule 6     expression -> term
Rule 7     term -> term TIMES factor
Rule 8     term -> term DIVIDE factor
Rule 9     term -> term MODULO factor
Rule 10    term -> factor
Rule 11    factor -> NUMBER
Rule 12    factor -> IDENTIFIER
Rule 13    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ADD_ASSIGN           : 
AND                  : 
ASSIGN               : 2
COLON                : 
DIVIDE               : 8
DIV_ASSIGN           : 
ELIF                 : 
ELSE                 : 
EQUAL                : 
FOR                  : 
GREATER_EQUAL        : 
GREATER_THAN         : 
IDENTIFIER           : 2 3 12
IF                   : 
IN                   : 
INTEGER              : 
LESS_EQUAL           : 
LESS_THAN            : 
LPAREN               : 13
MINUS                : 5
MODULO               : 9
MOD_ASSIGN           : 
MUL_ASSIGN           : 
NOT                  : 
NOT_EQUAL            : 
NUMBER               : 11
OR                   : 
PLUS                 : 4
PRINT                : 
RANGE                : 
RPAREN               : 13
STRING               : 
SUB_ASSIGN           : 
TIMES                : 7
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 4 5 13
factor               : 7 8 9 10
statement            : 0
term                 : 4 5 6 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) statement -> . IDENTIFIER ASSIGN expression
    (3) expression -> . IDENTIFIER
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . term MODULO factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    $end            reduce using rule 1 (statement -> expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 3

    (2) statement -> IDENTIFIER . ASSIGN expression
    (3) expression -> IDENTIFIER .
    (12) factor -> IDENTIFIER .

  ! reduce/reduce conflict for PLUS resolved using rule 3 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 3 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 3 (expression -> IDENTIFIER .)
    ASSIGN          shift and go to state 10
    PLUS            reduce using rule 3 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 3 (expression -> IDENTIFIER .)
    $end            reduce using rule 3 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 12 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 12 (factor -> IDENTIFIER .)
    MODULO          reduce using rule 12 (factor -> IDENTIFIER .)

  ! PLUS            [ reduce using rule 12 (factor -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 12 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 12 (factor -> IDENTIFIER .) ]


state 4

    (6) expression -> term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor
    (9) term -> term . MODULO factor

    PLUS            reduce using rule 6 (expression -> term .)
    MINUS           reduce using rule 6 (expression -> term .)
    $end            reduce using rule 6 (expression -> term .)
    RPAREN          reduce using rule 6 (expression -> term .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13


state 5

    (10) term -> factor .

    TIMES           reduce using rule 10 (term -> factor .)
    DIVIDE          reduce using rule 10 (term -> factor .)
    MODULO          reduce using rule 10 (term -> factor .)
    PLUS            reduce using rule 10 (term -> factor .)
    MINUS           reduce using rule 10 (term -> factor .)
    $end            reduce using rule 10 (term -> factor .)
    RPAREN          reduce using rule 10 (term -> factor .)


state 6

    (11) factor -> NUMBER .

    TIMES           reduce using rule 11 (factor -> NUMBER .)
    DIVIDE          reduce using rule 11 (factor -> NUMBER .)
    MODULO          reduce using rule 11 (factor -> NUMBER .)
    PLUS            reduce using rule 11 (factor -> NUMBER .)
    MINUS           reduce using rule 11 (factor -> NUMBER .)
    $end            reduce using rule 11 (factor -> NUMBER .)
    RPAREN          reduce using rule 11 (factor -> NUMBER .)


state 7

    (13) factor -> LPAREN . expression RPAREN
    (3) expression -> . IDENTIFIER
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . term MODULO factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 15
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    expression                     shift and go to state 14
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 8

    (4) expression -> expression PLUS . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . term MODULO factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 7

    term                           shift and go to state 16
    factor                         shift and go to state 5

state 9

    (5) expression -> expression MINUS . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . term MODULO factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 7

    term                           shift and go to state 18
    factor                         shift and go to state 5

state 10

    (2) statement -> IDENTIFIER ASSIGN . expression
    (3) expression -> . IDENTIFIER
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . term MODULO factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 15
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    expression                     shift and go to state 19
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 11

    (7) term -> term TIMES . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 7

    factor                         shift and go to state 20

state 12

    (8) term -> term DIVIDE . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 7

    factor                         shift and go to state 21

state 13

    (9) term -> term MODULO . factor
    (11) factor -> . NUMBER
    (12) factor -> . IDENTIFIER
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 7

    factor                         shift and go to state 22

state 14

    (13) factor -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    RPAREN          shift and go to state 23
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 15

    (3) expression -> IDENTIFIER .
    (12) factor -> IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 3 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 3 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 3 (expression -> IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 3 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 3 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 3 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 3 (expression -> IDENTIFIER .)
    $end            reduce using rule 3 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 12 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 12 (factor -> IDENTIFIER .)
    MODULO          reduce using rule 12 (factor -> IDENTIFIER .)

  ! RPAREN          [ reduce using rule 12 (factor -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 12 (factor -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 12 (factor -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 12 (factor -> IDENTIFIER .) ]


state 16

    (4) expression -> expression PLUS term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor
    (9) term -> term . MODULO factor

    PLUS            reduce using rule 4 (expression -> expression PLUS term .)
    MINUS           reduce using rule 4 (expression -> expression PLUS term .)
    $end            reduce using rule 4 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS term .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13


state 17

    (12) factor -> IDENTIFIER .

    TIMES           reduce using rule 12 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 12 (factor -> IDENTIFIER .)
    MODULO          reduce using rule 12 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 12 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 12 (factor -> IDENTIFIER .)
    $end            reduce using rule 12 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 12 (factor -> IDENTIFIER .)


state 18

    (5) expression -> expression MINUS term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor
    (9) term -> term . MODULO factor

    PLUS            reduce using rule 5 (expression -> expression MINUS term .)
    MINUS           reduce using rule 5 (expression -> expression MINUS term .)
    $end            reduce using rule 5 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS term .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13


state 19

    (2) statement -> IDENTIFIER ASSIGN expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    $end            reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 20

    (7) term -> term TIMES factor .

    TIMES           reduce using rule 7 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 7 (term -> term TIMES factor .)
    MODULO          reduce using rule 7 (term -> term TIMES factor .)
    PLUS            reduce using rule 7 (term -> term TIMES factor .)
    MINUS           reduce using rule 7 (term -> term TIMES factor .)
    $end            reduce using rule 7 (term -> term TIMES factor .)
    RPAREN          reduce using rule 7 (term -> term TIMES factor .)


state 21

    (8) term -> term DIVIDE factor .

    TIMES           reduce using rule 8 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 8 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 8 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 8 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 8 (term -> term DIVIDE factor .)
    $end            reduce using rule 8 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 8 (term -> term DIVIDE factor .)


state 22

    (9) term -> term MODULO factor .

    TIMES           reduce using rule 9 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 9 (term -> term MODULO factor .)
    MODULO          reduce using rule 9 (term -> term MODULO factor .)
    PLUS            reduce using rule 9 (term -> term MODULO factor .)
    MINUS           reduce using rule 9 (term -> term MODULO factor .)
    $end            reduce using rule 9 (term -> term MODULO factor .)
    RPAREN          reduce using rule 9 (term -> term MODULO factor .)


state 23

    (13) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (factor -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 3 resolved using rule (expression -> IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 3
WARNING: reduce/reduce conflict in state 15 resolved using rule (expression -> IDENTIFIER)
WARNING: rejected rule (factor -> IDENTIFIER) in state 15

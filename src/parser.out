Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CONTINUE
    ELIF
    FOR
    IN
    NEWLINE
    NUMBER
    OR
    STRING

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment
Rule 5     statement -> expression
Rule 6     statement -> control_flow
Rule 7     statement -> function_definition
Rule 8     statement -> PRINT LPAREN expression RPAREN
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression TIMES expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> expression MODULO expression
Rule 14    expression -> expression GREATER_THAN expression
Rule 15    expression -> expression LESS_THAN expression
Rule 16    expression -> expression GREATER_EQUAL expression
Rule 17    expression -> expression LESS_EQUAL expression
Rule 18    expression -> expression EQUAL expression
Rule 19    expression -> expression NOT_EQUAL expression
Rule 20    expression -> LPAREN expression RPAREN
Rule 21    expression -> INTEGER
Rule 22    expression -> FLOAT
Rule 23    expression -> IDENTIFIER
Rule 24    expression -> STRING_LITERAL
Rule 25    expression -> BOOLEAN
Rule 26    expression -> MINUS expression
Rule 27    expression -> NOT expression
Rule 28    assignment -> IDENTIFIER ASSIGN expression
Rule 29    assignment -> IDENTIFIER ADD_ASSIGN expression
Rule 30    assignment -> IDENTIFIER SUB_ASSIGN expression
Rule 31    assignment -> IDENTIFIER MUL_ASSIGN expression
Rule 32    assignment -> IDENTIFIER DIV_ASSIGN expression
Rule 33    assignment -> IDENTIFIER MOD_ASSIGN expression
Rule 34    expression -> LBRACKET list_elements RBRACKET
Rule 35    list_elements -> list_elements COMMA expression
Rule 36    list_elements -> expression
Rule 37    expression -> expression LBRACKET expression RBRACKET
Rule 38    expression -> expression RANGE expression
Rule 39    control_flow -> if_statement
Rule 40    control_flow -> while_statement
Rule 41    if_statement -> IF expression COLON block ELSE COLON block
Rule 42    if_statement -> IF expression COLON block
Rule 43    while_statement -> WHILE expression COLON block
Rule 44    block -> INDENT statements OUTDENT
Rule 45    function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block

Terminals, with rules where they appear

ADD_ASSIGN           : 29
AND                  :
ASSIGN               : 28
BOOLEAN              : 25
BREAK                :
COLON                : 41 41 42 43 45
COMMA                : 35
CONTINUE             :
DEF                  : 45
DIVIDE               : 12
DIV_ASSIGN           : 32
ELIF                 :
ELSE                 : 41
EQUAL                : 18
FLOAT                : 22
FOR                  :
GREATER_EQUAL        : 16
GREATER_THAN         : 14
IDENTIFIER           : 23 28 29 30 31 32 33 45
IF                   : 41 42
IN                   :
INDENT               : 44
INTEGER              : 21
LBRACKET             : 34 37
LESS_EQUAL           : 17
LESS_THAN            : 15
LPAREN               : 8 20 45
MINUS                : 10 26
MODULO               : 13
MOD_ASSIGN           : 33
MUL_ASSIGN           : 31
NEWLINE              :
NOT                  : 27
NOT_EQUAL            : 19
NUMBER               :
OR                   :
OUTDENT              : 44
PLUS                 : 9
PRINT                : 8
RANGE                : 38
RBRACKET             : 34 37
RPAREN               : 8 20 45
STRING               :
STRING_LITERAL       : 24
SUB_ASSIGN           : 30
TIMES                : 11
WHILE                : 43
error                :

Nonterminals, with rules where they appear

assignment           : 4
block                : 41 41 42 43 45
control_flow         : 6
expression           : 5 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 26 27 28 29 30 31 32 33 35 36 37 37 38 38 41 42 43
function_definition  : 7
if_statement         : 39
list_elements        : 34 35
program              : 0
statement            : 2 3
statements           : 1 2 44
while_statement      : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (28) assignment -> . IDENTIFIER ASSIGN expression
    (29) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (30) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (31) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (32) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (33) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression
    (39) control_flow -> . if_statement
    (40) control_flow -> . while_statement
    (45) function_definition -> . DEF IDENTIFIER LPAREN RPAREN COLON block
    (41) if_statement -> . IF expression COLON block ELSE COLON block
    (42) if_statement -> . IF expression COLON block
    (43) while_statement -> . WHILE expression COLON block

    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    DEF             shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (28) assignment -> . IDENTIFIER ASSIGN expression
    (29) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (30) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (31) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (32) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (33) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression
    (39) control_flow -> . if_statement
    (40) control_flow -> . while_statement
    (45) function_definition -> . DEF IDENTIFIER LPAREN RPAREN COLON block
    (41) if_statement -> . IF expression COLON block ELSE COLON block
    (42) if_statement -> . IF expression COLON block
    (43) while_statement -> . WHILE expression COLON block

    $end            reduce using rule 1 (program -> statements .)
    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    DEF             shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    statement                      shift and go to state 23
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19

state 3

    (3) statements -> statement .

    PRINT           reduce using rule 3 (statements -> statement .)
    IDENTIFIER      reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    INTEGER         reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    STRING_LITERAL  reduce using rule 3 (statements -> statement .)
    BOOLEAN         reduce using rule 3 (statements -> statement .)
    MINUS           reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    LBRACKET        reduce using rule 3 (statements -> statement .)
    DEF             reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    OUTDENT         reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment .

    PRINT           reduce using rule 4 (statement -> assignment .)
    IDENTIFIER      reduce using rule 4 (statement -> assignment .)
    LPAREN          reduce using rule 4 (statement -> assignment .)
    INTEGER         reduce using rule 4 (statement -> assignment .)
    FLOAT           reduce using rule 4 (statement -> assignment .)
    STRING_LITERAL  reduce using rule 4 (statement -> assignment .)
    BOOLEAN         reduce using rule 4 (statement -> assignment .)
    MINUS           reduce using rule 4 (statement -> assignment .)
    NOT             reduce using rule 4 (statement -> assignment .)
    LBRACKET        reduce using rule 4 (statement -> assignment .)
    DEF             reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    OUTDENT         reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 5 (statement -> expression .)
    IDENTIFIER      reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    INTEGER         reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    STRING_LITERAL  reduce using rule 5 (statement -> expression .)
    BOOLEAN         reduce using rule 5 (statement -> expression .)
    NOT             reduce using rule 5 (statement -> expression .)
    DEF             reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    OUTDENT         reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 5 (statement -> expression .) ]
  ! LBRACKET        [ reduce using rule 5 (statement -> expression .) ]


state 6

    (6) statement -> control_flow .

    PRINT           reduce using rule 6 (statement -> control_flow .)
    IDENTIFIER      reduce using rule 6 (statement -> control_flow .)
    LPAREN          reduce using rule 6 (statement -> control_flow .)
    INTEGER         reduce using rule 6 (statement -> control_flow .)
    FLOAT           reduce using rule 6 (statement -> control_flow .)
    STRING_LITERAL  reduce using rule 6 (statement -> control_flow .)
    BOOLEAN         reduce using rule 6 (statement -> control_flow .)
    MINUS           reduce using rule 6 (statement -> control_flow .)
    NOT             reduce using rule 6 (statement -> control_flow .)
    LBRACKET        reduce using rule 6 (statement -> control_flow .)
    DEF             reduce using rule 6 (statement -> control_flow .)
    IF              reduce using rule 6 (statement -> control_flow .)
    WHILE           reduce using rule 6 (statement -> control_flow .)
    $end            reduce using rule 6 (statement -> control_flow .)
    OUTDENT         reduce using rule 6 (statement -> control_flow .)


state 7

    (7) statement -> function_definition .

    PRINT           reduce using rule 7 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 7 (statement -> function_definition .)
    LPAREN          reduce using rule 7 (statement -> function_definition .)
    INTEGER         reduce using rule 7 (statement -> function_definition .)
    FLOAT           reduce using rule 7 (statement -> function_definition .)
    STRING_LITERAL  reduce using rule 7 (statement -> function_definition .)
    BOOLEAN         reduce using rule 7 (statement -> function_definition .)
    MINUS           reduce using rule 7 (statement -> function_definition .)
    NOT             reduce using rule 7 (statement -> function_definition .)
    LBRACKET        reduce using rule 7 (statement -> function_definition .)
    DEF             reduce using rule 7 (statement -> function_definition .)
    IF              reduce using rule 7 (statement -> function_definition .)
    WHILE           reduce using rule 7 (statement -> function_definition .)
    $end            reduce using rule 7 (statement -> function_definition .)
    OUTDENT         reduce using rule 7 (statement -> function_definition .)


state 8

    (8) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 37


state 9

    (20) expression -> LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 38

state 10

    (28) assignment -> IDENTIFIER . ASSIGN expression
    (29) assignment -> IDENTIFIER . ADD_ASSIGN expression
    (30) assignment -> IDENTIFIER . SUB_ASSIGN expression
    (31) assignment -> IDENTIFIER . MUL_ASSIGN expression
    (32) assignment -> IDENTIFIER . DIV_ASSIGN expression
    (33) assignment -> IDENTIFIER . MOD_ASSIGN expression
    (23) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 40
    ADD_ASSIGN      shift and go to state 41
    SUB_ASSIGN      shift and go to state 42
    MUL_ASSIGN      shift and go to state 43
    DIV_ASSIGN      shift and go to state 44
    MOD_ASSIGN      shift and go to state 45
    PLUS            reduce using rule 23 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 23 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 23 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 23 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 23 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 23 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 23 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 23 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 23 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 23 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 23 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 23 (expression -> IDENTIFIER .)
    RANGE           reduce using rule 23 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 23 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (expression -> IDENTIFIER .)
    STRING_LITERAL  reduce using rule 23 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 23 (expression -> IDENTIFIER .)
    NOT             reduce using rule 23 (expression -> IDENTIFIER .)
    DEF             reduce using rule 23 (expression -> IDENTIFIER .)
    IF              reduce using rule 23 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 23 (expression -> IDENTIFIER .)
    $end            reduce using rule 23 (expression -> IDENTIFIER .)
    OUTDENT         reduce using rule 23 (expression -> IDENTIFIER .)


state 11

    (26) expression -> MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 46

state 12

    (21) expression -> INTEGER .

    PLUS            reduce using rule 21 (expression -> INTEGER .)
    MINUS           reduce using rule 21 (expression -> INTEGER .)
    TIMES           reduce using rule 21 (expression -> INTEGER .)
    DIVIDE          reduce using rule 21 (expression -> INTEGER .)
    MODULO          reduce using rule 21 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 21 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 21 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 21 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 21 (expression -> INTEGER .)
    EQUAL           reduce using rule 21 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 21 (expression -> INTEGER .)
    LBRACKET        reduce using rule 21 (expression -> INTEGER .)
    RANGE           reduce using rule 21 (expression -> INTEGER .)
    PRINT           reduce using rule 21 (expression -> INTEGER .)
    IDENTIFIER      reduce using rule 21 (expression -> INTEGER .)
    LPAREN          reduce using rule 21 (expression -> INTEGER .)
    INTEGER         reduce using rule 21 (expression -> INTEGER .)
    FLOAT           reduce using rule 21 (expression -> INTEGER .)
    STRING_LITERAL  reduce using rule 21 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 21 (expression -> INTEGER .)
    NOT             reduce using rule 21 (expression -> INTEGER .)
    DEF             reduce using rule 21 (expression -> INTEGER .)
    IF              reduce using rule 21 (expression -> INTEGER .)
    WHILE           reduce using rule 21 (expression -> INTEGER .)
    $end            reduce using rule 21 (expression -> INTEGER .)
    RPAREN          reduce using rule 21 (expression -> INTEGER .)
    RBRACKET        reduce using rule 21 (expression -> INTEGER .)
    COMMA           reduce using rule 21 (expression -> INTEGER .)
    COLON           reduce using rule 21 (expression -> INTEGER .)
    OUTDENT         reduce using rule 21 (expression -> INTEGER .)


state 13

    (22) expression -> FLOAT .

    PLUS            reduce using rule 22 (expression -> FLOAT .)
    MINUS           reduce using rule 22 (expression -> FLOAT .)
    TIMES           reduce using rule 22 (expression -> FLOAT .)
    DIVIDE          reduce using rule 22 (expression -> FLOAT .)
    MODULO          reduce using rule 22 (expression -> FLOAT .)
    GREATER_THAN    reduce using rule 22 (expression -> FLOAT .)
    LESS_THAN       reduce using rule 22 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 22 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 22 (expression -> FLOAT .)
    EQUAL           reduce using rule 22 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 22 (expression -> FLOAT .)
    LBRACKET        reduce using rule 22 (expression -> FLOAT .)
    RANGE           reduce using rule 22 (expression -> FLOAT .)
    PRINT           reduce using rule 22 (expression -> FLOAT .)
    IDENTIFIER      reduce using rule 22 (expression -> FLOAT .)
    LPAREN          reduce using rule 22 (expression -> FLOAT .)
    INTEGER         reduce using rule 22 (expression -> FLOAT .)
    FLOAT           reduce using rule 22 (expression -> FLOAT .)
    STRING_LITERAL  reduce using rule 22 (expression -> FLOAT .)
    BOOLEAN         reduce using rule 22 (expression -> FLOAT .)
    NOT             reduce using rule 22 (expression -> FLOAT .)
    DEF             reduce using rule 22 (expression -> FLOAT .)
    IF              reduce using rule 22 (expression -> FLOAT .)
    WHILE           reduce using rule 22 (expression -> FLOAT .)
    $end            reduce using rule 22 (expression -> FLOAT .)
    RPAREN          reduce using rule 22 (expression -> FLOAT .)
    RBRACKET        reduce using rule 22 (expression -> FLOAT .)
    COMMA           reduce using rule 22 (expression -> FLOAT .)
    COLON           reduce using rule 22 (expression -> FLOAT .)
    OUTDENT         reduce using rule 22 (expression -> FLOAT .)


state 14

    (24) expression -> STRING_LITERAL .

    PLUS            reduce using rule 24 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 24 (expression -> STRING_LITERAL .)
    TIMES           reduce using rule 24 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 24 (expression -> STRING_LITERAL .)
    MODULO          reduce using rule 24 (expression -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 24 (expression -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 24 (expression -> STRING_LITERAL .)
    GREATER_EQUAL   reduce using rule 24 (expression -> STRING_LITERAL .)
    LESS_EQUAL      reduce using rule 24 (expression -> STRING_LITERAL .)
    EQUAL           reduce using rule 24 (expression -> STRING_LITERAL .)
    NOT_EQUAL       reduce using rule 24 (expression -> STRING_LITERAL .)
    LBRACKET        reduce using rule 24 (expression -> STRING_LITERAL .)
    RANGE           reduce using rule 24 (expression -> STRING_LITERAL .)
    PRINT           reduce using rule 24 (expression -> STRING_LITERAL .)
    IDENTIFIER      reduce using rule 24 (expression -> STRING_LITERAL .)
    LPAREN          reduce using rule 24 (expression -> STRING_LITERAL .)
    INTEGER         reduce using rule 24 (expression -> STRING_LITERAL .)
    FLOAT           reduce using rule 24 (expression -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 24 (expression -> STRING_LITERAL .)
    BOOLEAN         reduce using rule 24 (expression -> STRING_LITERAL .)
    NOT             reduce using rule 24 (expression -> STRING_LITERAL .)
    DEF             reduce using rule 24 (expression -> STRING_LITERAL .)
    IF              reduce using rule 24 (expression -> STRING_LITERAL .)
    WHILE           reduce using rule 24 (expression -> STRING_LITERAL .)
    $end            reduce using rule 24 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 24 (expression -> STRING_LITERAL .)
    RBRACKET        reduce using rule 24 (expression -> STRING_LITERAL .)
    COMMA           reduce using rule 24 (expression -> STRING_LITERAL .)
    COLON           reduce using rule 24 (expression -> STRING_LITERAL .)
    OUTDENT         reduce using rule 24 (expression -> STRING_LITERAL .)


state 15

    (25) expression -> BOOLEAN .

    PLUS            reduce using rule 25 (expression -> BOOLEAN .)
    MINUS           reduce using rule 25 (expression -> BOOLEAN .)
    TIMES           reduce using rule 25 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 25 (expression -> BOOLEAN .)
    MODULO          reduce using rule 25 (expression -> BOOLEAN .)
    GREATER_THAN    reduce using rule 25 (expression -> BOOLEAN .)
    LESS_THAN       reduce using rule 25 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 25 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 25 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 25 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 25 (expression -> BOOLEAN .)
    LBRACKET        reduce using rule 25 (expression -> BOOLEAN .)
    RANGE           reduce using rule 25 (expression -> BOOLEAN .)
    PRINT           reduce using rule 25 (expression -> BOOLEAN .)
    IDENTIFIER      reduce using rule 25 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 25 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 25 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 25 (expression -> BOOLEAN .)
    STRING_LITERAL  reduce using rule 25 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 25 (expression -> BOOLEAN .)
    NOT             reduce using rule 25 (expression -> BOOLEAN .)
    DEF             reduce using rule 25 (expression -> BOOLEAN .)
    IF              reduce using rule 25 (expression -> BOOLEAN .)
    WHILE           reduce using rule 25 (expression -> BOOLEAN .)
    $end            reduce using rule 25 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 25 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 25 (expression -> BOOLEAN .)
    COMMA           reduce using rule 25 (expression -> BOOLEAN .)
    COLON           reduce using rule 25 (expression -> BOOLEAN .)
    OUTDENT         reduce using rule 25 (expression -> BOOLEAN .)


state 16

    (27) expression -> NOT . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 47

state 17

    (34) expression -> LBRACKET . list_elements RBRACKET
    (35) list_elements -> . list_elements COMMA expression
    (36) list_elements -> . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    list_elements                  shift and go to state 48
    expression                     shift and go to state 49

state 18

    (39) control_flow -> if_statement .

    PRINT           reduce using rule 39 (control_flow -> if_statement .)
    IDENTIFIER      reduce using rule 39 (control_flow -> if_statement .)
    LPAREN          reduce using rule 39 (control_flow -> if_statement .)
    INTEGER         reduce using rule 39 (control_flow -> if_statement .)
    FLOAT           reduce using rule 39 (control_flow -> if_statement .)
    STRING_LITERAL  reduce using rule 39 (control_flow -> if_statement .)
    BOOLEAN         reduce using rule 39 (control_flow -> if_statement .)
    MINUS           reduce using rule 39 (control_flow -> if_statement .)
    NOT             reduce using rule 39 (control_flow -> if_statement .)
    LBRACKET        reduce using rule 39 (control_flow -> if_statement .)
    DEF             reduce using rule 39 (control_flow -> if_statement .)
    IF              reduce using rule 39 (control_flow -> if_statement .)
    WHILE           reduce using rule 39 (control_flow -> if_statement .)
    $end            reduce using rule 39 (control_flow -> if_statement .)
    OUTDENT         reduce using rule 39 (control_flow -> if_statement .)


state 19

    (40) control_flow -> while_statement .

    PRINT           reduce using rule 40 (control_flow -> while_statement .)
    IDENTIFIER      reduce using rule 40 (control_flow -> while_statement .)
    LPAREN          reduce using rule 40 (control_flow -> while_statement .)
    INTEGER         reduce using rule 40 (control_flow -> while_statement .)
    FLOAT           reduce using rule 40 (control_flow -> while_statement .)
    STRING_LITERAL  reduce using rule 40 (control_flow -> while_statement .)
    BOOLEAN         reduce using rule 40 (control_flow -> while_statement .)
    MINUS           reduce using rule 40 (control_flow -> while_statement .)
    NOT             reduce using rule 40 (control_flow -> while_statement .)
    LBRACKET        reduce using rule 40 (control_flow -> while_statement .)
    DEF             reduce using rule 40 (control_flow -> while_statement .)
    IF              reduce using rule 40 (control_flow -> while_statement .)
    WHILE           reduce using rule 40 (control_flow -> while_statement .)
    $end            reduce using rule 40 (control_flow -> while_statement .)
    OUTDENT         reduce using rule 40 (control_flow -> while_statement .)


state 20

    (45) function_definition -> DEF . IDENTIFIER LPAREN RPAREN COLON block

    IDENTIFIER      shift and go to state 50


state 21

    (41) if_statement -> IF . expression COLON block ELSE COLON block
    (42) if_statement -> IF . expression COLON block
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 51

state 22

    (43) while_statement -> WHILE . expression COLON block
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 52

state 23

    (2) statements -> statements statement .

    PRINT           reduce using rule 2 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    INTEGER         reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 2 (statements -> statements statement .)
    BOOLEAN         reduce using rule 2 (statements -> statements statement .)
    MINUS           reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    LBRACKET        reduce using rule 2 (statements -> statements statement .)
    DEF             reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    OUTDENT         reduce using rule 2 (statements -> statements statement .)


state 24

    (9) expression -> expression PLUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 53

state 25

    (10) expression -> expression MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 54

state 26

    (11) expression -> expression TIMES . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 55

state 27

    (12) expression -> expression DIVIDE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 56

state 28

    (13) expression -> expression MODULO . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 57

state 29

    (14) expression -> expression GREATER_THAN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 58

state 30

    (15) expression -> expression LESS_THAN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 59

state 31

    (16) expression -> expression GREATER_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 60

state 32

    (17) expression -> expression LESS_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 61

state 33

    (18) expression -> expression EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 62

state 34

    (19) expression -> expression NOT_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 63

state 35

    (37) expression -> expression LBRACKET . expression RBRACKET
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 64

state 36

    (38) expression -> expression RANGE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 65

state 37

    (8) statement -> PRINT LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 66

state 38

    (20) expression -> LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    RPAREN          shift and go to state 67
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 39

    (23) expression -> IDENTIFIER .

    RPAREN          reduce using rule 23 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 23 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 23 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 23 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 23 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 23 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 23 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 23 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 23 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 23 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 23 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 23 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 23 (expression -> IDENTIFIER .)
    RANGE           reduce using rule 23 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 23 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (expression -> IDENTIFIER .)
    STRING_LITERAL  reduce using rule 23 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 23 (expression -> IDENTIFIER .)
    NOT             reduce using rule 23 (expression -> IDENTIFIER .)
    DEF             reduce using rule 23 (expression -> IDENTIFIER .)
    IF              reduce using rule 23 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 23 (expression -> IDENTIFIER .)
    $end            reduce using rule 23 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 23 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 23 (expression -> IDENTIFIER .)
    COLON           reduce using rule 23 (expression -> IDENTIFIER .)
    OUTDENT         reduce using rule 23 (expression -> IDENTIFIER .)


state 40

    (28) assignment -> IDENTIFIER ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 68

state 41

    (29) assignment -> IDENTIFIER ADD_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 69

state 42

    (30) assignment -> IDENTIFIER SUB_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 70

state 43

    (31) assignment -> IDENTIFIER MUL_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 71

state 44

    (32) assignment -> IDENTIFIER DIV_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 72

state 45

    (33) assignment -> IDENTIFIER MOD_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 73

state 46

    (26) expression -> MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 26 (expression -> MINUS expression .)
    MINUS           reduce using rule 26 (expression -> MINUS expression .)
    TIMES           reduce using rule 26 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 26 (expression -> MINUS expression .)
    MODULO          reduce using rule 26 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 26 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 26 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 26 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 26 (expression -> MINUS expression .)
    EQUAL           reduce using rule 26 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 26 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 26 (expression -> MINUS expression .)
    RANGE           reduce using rule 26 (expression -> MINUS expression .)
    PRINT           reduce using rule 26 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 26 (expression -> MINUS expression .)
    LPAREN          reduce using rule 26 (expression -> MINUS expression .)
    INTEGER         reduce using rule 26 (expression -> MINUS expression .)
    FLOAT           reduce using rule 26 (expression -> MINUS expression .)
    STRING_LITERAL  reduce using rule 26 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 26 (expression -> MINUS expression .)
    NOT             reduce using rule 26 (expression -> MINUS expression .)
    DEF             reduce using rule 26 (expression -> MINUS expression .)
    IF              reduce using rule 26 (expression -> MINUS expression .)
    WHILE           reduce using rule 26 (expression -> MINUS expression .)
    $end            reduce using rule 26 (expression -> MINUS expression .)
    RPAREN          reduce using rule 26 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 26 (expression -> MINUS expression .)
    COMMA           reduce using rule 26 (expression -> MINUS expression .)
    COLON           reduce using rule 26 (expression -> MINUS expression .)
    OUTDENT         reduce using rule 26 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MODULO          [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 47

    (27) expression -> NOT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    LBRACKET        reduce using rule 27 (expression -> NOT expression .)
    RANGE           reduce using rule 27 (expression -> NOT expression .)
    PRINT           reduce using rule 27 (expression -> NOT expression .)
    IDENTIFIER      reduce using rule 27 (expression -> NOT expression .)
    LPAREN          reduce using rule 27 (expression -> NOT expression .)
    INTEGER         reduce using rule 27 (expression -> NOT expression .)
    FLOAT           reduce using rule 27 (expression -> NOT expression .)
    STRING_LITERAL  reduce using rule 27 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 27 (expression -> NOT expression .)
    NOT             reduce using rule 27 (expression -> NOT expression .)
    DEF             reduce using rule 27 (expression -> NOT expression .)
    IF              reduce using rule 27 (expression -> NOT expression .)
    WHILE           reduce using rule 27 (expression -> NOT expression .)
    $end            reduce using rule 27 (expression -> NOT expression .)
    RPAREN          reduce using rule 27 (expression -> NOT expression .)
    RBRACKET        reduce using rule 27 (expression -> NOT expression .)
    COMMA           reduce using rule 27 (expression -> NOT expression .)
    COLON           reduce using rule 27 (expression -> NOT expression .)
    OUTDENT         reduce using rule 27 (expression -> NOT expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34

  ! PLUS            [ reduce using rule 27 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 27 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 27 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 27 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 27 (expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 27 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 27 (expression -> NOT expression .) ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 48

    (34) expression -> LBRACKET list_elements . RBRACKET
    (35) list_elements -> list_elements . COMMA expression

    RBRACKET        shift and go to state 74
    COMMA           shift and go to state 75


state 49

    (36) list_elements -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    RBRACKET        reduce using rule 36 (list_elements -> expression .)
    COMMA           reduce using rule 36 (list_elements -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 50

    (45) function_definition -> DEF IDENTIFIER . LPAREN RPAREN COLON block

    LPAREN          shift and go to state 76


state 51

    (41) if_statement -> IF expression . COLON block ELSE COLON block
    (42) if_statement -> IF expression . COLON block
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    COLON           shift and go to state 77
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 52

    (43) while_statement -> WHILE expression . COLON block
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    COLON           shift and go to state 78
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 53

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 9 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 9 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 9 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 9 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 9 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 9 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 9 (expression -> expression PLUS expression .)
    RANGE           reduce using rule 9 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 9 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 9 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 9 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 9 (expression -> expression PLUS expression .)
    STRING_LITERAL  reduce using rule 9 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 9 (expression -> expression PLUS expression .)
    NOT             reduce using rule 9 (expression -> expression PLUS expression .)
    DEF             reduce using rule 9 (expression -> expression PLUS expression .)
    IF              reduce using rule 9 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 9 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 9 (expression -> expression PLUS expression .)
    COLON           reduce using rule 9 (expression -> expression PLUS expression .)
    OUTDENT         reduce using rule 9 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! TIMES           [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 54

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 10 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 10 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 10 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 10 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 10 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 10 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 10 (expression -> expression MINUS expression .)
    RANGE           reduce using rule 10 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 10 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 10 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 10 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 10 (expression -> expression MINUS expression .)
    STRING_LITERAL  reduce using rule 10 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 10 (expression -> expression MINUS expression .)
    NOT             reduce using rule 10 (expression -> expression MINUS expression .)
    DEF             reduce using rule 10 (expression -> expression MINUS expression .)
    IF              reduce using rule 10 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 10 (expression -> expression MINUS expression .)
    $end            reduce using rule 10 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 10 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 10 (expression -> expression MINUS expression .)
    COLON           reduce using rule 10 (expression -> expression MINUS expression .)
    OUTDENT         reduce using rule 10 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! TIMES           [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 55

    (11) expression -> expression TIMES expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 11 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 11 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 11 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 11 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 11 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 11 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 11 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 11 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 11 (expression -> expression TIMES expression .)
    RANGE           reduce using rule 11 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 11 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 11 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 11 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 11 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 11 (expression -> expression TIMES expression .)
    STRING_LITERAL  reduce using rule 11 (expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 11 (expression -> expression TIMES expression .)
    NOT             reduce using rule 11 (expression -> expression TIMES expression .)
    DEF             reduce using rule 11 (expression -> expression TIMES expression .)
    IF              reduce using rule 11 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 11 (expression -> expression TIMES expression .)
    $end            reduce using rule 11 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 11 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 11 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 11 (expression -> expression TIMES expression .)
    COLON           reduce using rule 11 (expression -> expression TIMES expression .)
    OUTDENT         reduce using rule 11 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MODULO          [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 56

    (12) expression -> expression DIVIDE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 12 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 12 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 12 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 12 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 12 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 12 (expression -> expression DIVIDE expression .)
    RANGE           reduce using rule 12 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 12 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 12 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 12 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 12 (expression -> expression DIVIDE expression .)
    STRING_LITERAL  reduce using rule 12 (expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 12 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 12 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 12 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 12 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 12 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 12 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 12 (expression -> expression DIVIDE expression .)
    OUTDENT         reduce using rule 12 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MODULO          [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 57

    (13) expression -> expression MODULO expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    PLUS            reduce using rule 13 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 13 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 13 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 13 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 13 (expression -> expression MODULO expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression MODULO expression .)
    LESS_THAN       reduce using rule 13 (expression -> expression MODULO expression .)
    GREATER_EQUAL   reduce using rule 13 (expression -> expression MODULO expression .)
    LESS_EQUAL      reduce using rule 13 (expression -> expression MODULO expression .)
    EQUAL           reduce using rule 13 (expression -> expression MODULO expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression MODULO expression .)
    LBRACKET        reduce using rule 13 (expression -> expression MODULO expression .)
    RANGE           reduce using rule 13 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 13 (expression -> expression MODULO expression .)
    IDENTIFIER      reduce using rule 13 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 13 (expression -> expression MODULO expression .)
    INTEGER         reduce using rule 13 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 13 (expression -> expression MODULO expression .)
    STRING_LITERAL  reduce using rule 13 (expression -> expression MODULO expression .)
    BOOLEAN         reduce using rule 13 (expression -> expression MODULO expression .)
    NOT             reduce using rule 13 (expression -> expression MODULO expression .)
    DEF             reduce using rule 13 (expression -> expression MODULO expression .)
    IF              reduce using rule 13 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 13 (expression -> expression MODULO expression .)
    $end            reduce using rule 13 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 13 (expression -> expression MODULO expression .)
    RBRACKET        reduce using rule 13 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 13 (expression -> expression MODULO expression .)
    COLON           reduce using rule 13 (expression -> expression MODULO expression .)
    OUTDENT         reduce using rule 13 (expression -> expression MODULO expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 25 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MODULO          [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 58

    (14) expression -> expression GREATER_THAN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    EQUAL           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LBRACKET        reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RANGE           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    PRINT           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    IDENTIFIER      reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LPAREN          reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    INTEGER         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    FLOAT           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    STRING_LITERAL  reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    BOOLEAN         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    NOT             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    DEF             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    IF              reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RBRACKET        reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    OUTDENT         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MODULO          [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 59

    (15) expression -> expression LESS_THAN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 15 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 15 (expression -> expression LESS_THAN expression .)
    EQUAL           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RANGE           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    PRINT           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    IDENTIFIER      reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LPAREN          reduce using rule 15 (expression -> expression LESS_THAN expression .)
    INTEGER         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    FLOAT           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    STRING_LITERAL  reduce using rule 15 (expression -> expression LESS_THAN expression .)
    BOOLEAN         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    NOT             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    DEF             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    IF              reduce using rule 15 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 15 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    OUTDENT         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! MODULO          [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 60

    (16) expression -> expression GREATER_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LBRACKET        reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RANGE           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    PRINT           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    IDENTIFIER      reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    FLOAT           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    STRING_LITERAL  reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    DEF             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RBRACKET        reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    OUTDENT         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 61

    (17) expression -> expression LESS_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LBRACKET        reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RANGE           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    PRINT           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    IDENTIFIER      reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    FLOAT           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    STRING_LITERAL  reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    DEF             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RBRACKET        reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    OUTDENT         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 62

    (18) expression -> expression EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 18 (expression -> expression EQUAL expression .)
    LESS_THAN       reduce using rule 18 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 18 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 18 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 18 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 18 (expression -> expression EQUAL expression .)
    LBRACKET        reduce using rule 18 (expression -> expression EQUAL expression .)
    RANGE           reduce using rule 18 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 18 (expression -> expression EQUAL expression .)
    IDENTIFIER      reduce using rule 18 (expression -> expression EQUAL expression .)
    LPAREN          reduce using rule 18 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 18 (expression -> expression EQUAL expression .)
    FLOAT           reduce using rule 18 (expression -> expression EQUAL expression .)
    STRING_LITERAL  reduce using rule 18 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 18 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 18 (expression -> expression EQUAL expression .)
    DEF             reduce using rule 18 (expression -> expression EQUAL expression .)
    IF              reduce using rule 18 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 18 (expression -> expression EQUAL expression .)
    $end            reduce using rule 18 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 18 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 18 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 18 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 18 (expression -> expression EQUAL expression .)
    OUTDENT         reduce using rule 18 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 63

    (19) expression -> expression NOT_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    GREATER_THAN    reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LBRACKET        reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RANGE           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    PRINT           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    IDENTIFIER      reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LPAREN          reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    FLOAT           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    STRING_LITERAL  reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    DEF             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RBRACKET        reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    OUTDENT         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28

  ! PLUS            [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 29 ]
  ! LESS_THAN       [ shift and go to state 30 ]
  ! GREATER_EQUAL   [ shift and go to state 31 ]
  ! LESS_EQUAL      [ shift and go to state 32 ]
  ! EQUAL           [ shift and go to state 33 ]
  ! NOT_EQUAL       [ shift and go to state 34 ]
  ! LBRACKET        [ shift and go to state 35 ]
  ! RANGE           [ shift and go to state 36 ]


state 64

    (37) expression -> expression LBRACKET expression . RBRACKET
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    RBRACKET        shift and go to state 79
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 65

    (38) expression -> expression RANGE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for RANGE resolved as shift
    PRINT           reduce using rule 38 (expression -> expression RANGE expression .)
    IDENTIFIER      reduce using rule 38 (expression -> expression RANGE expression .)
    LPAREN          reduce using rule 38 (expression -> expression RANGE expression .)
    INTEGER         reduce using rule 38 (expression -> expression RANGE expression .)
    FLOAT           reduce using rule 38 (expression -> expression RANGE expression .)
    STRING_LITERAL  reduce using rule 38 (expression -> expression RANGE expression .)
    BOOLEAN         reduce using rule 38 (expression -> expression RANGE expression .)
    NOT             reduce using rule 38 (expression -> expression RANGE expression .)
    DEF             reduce using rule 38 (expression -> expression RANGE expression .)
    IF              reduce using rule 38 (expression -> expression RANGE expression .)
    WHILE           reduce using rule 38 (expression -> expression RANGE expression .)
    $end            reduce using rule 38 (expression -> expression RANGE expression .)
    RPAREN          reduce using rule 38 (expression -> expression RANGE expression .)
    RBRACKET        reduce using rule 38 (expression -> expression RANGE expression .)
    COMMA           reduce using rule 38 (expression -> expression RANGE expression .)
    COLON           reduce using rule 38 (expression -> expression RANGE expression .)
    OUTDENT         reduce using rule 38 (expression -> expression RANGE expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! PLUS            [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! MODULO          [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! GREATER_THAN    [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! LESS_THAN       [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! LESS_EQUAL      [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! EQUAL           [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! LBRACKET        [ reduce using rule 38 (expression -> expression RANGE expression .) ]
  ! RANGE           [ reduce using rule 38 (expression -> expression RANGE expression .) ]


state 66

    (8) statement -> PRINT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 67

    (20) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    OUTDENT         reduce using rule 20 (expression -> LPAREN expression RPAREN .)


state 68

    (28) assignment -> IDENTIFIER ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    INTEGER         reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    FLOAT           reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    STRING_LITERAL  reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    BOOLEAN         reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    NOT             reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    DEF             reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    OUTDENT         reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 28 (assignment -> IDENTIFIER ASSIGN expression .) ]


state 69

    (29) assignment -> IDENTIFIER ADD_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    IDENTIFIER      reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    LPAREN          reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    INTEGER         reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    FLOAT           reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    BOOLEAN         reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    NOT             reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    DEF             reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    IF              reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    WHILE           reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    $end            reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    OUTDENT         reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 29 (assignment -> IDENTIFIER ADD_ASSIGN expression .) ]


state 70

    (30) assignment -> IDENTIFIER SUB_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    IDENTIFIER      reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    LPAREN          reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    INTEGER         reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    FLOAT           reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    BOOLEAN         reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    NOT             reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    DEF             reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    IF              reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    WHILE           reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    $end            reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    OUTDENT         reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 30 (assignment -> IDENTIFIER SUB_ASSIGN expression .) ]


state 71

    (31) assignment -> IDENTIFIER MUL_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    IDENTIFIER      reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    LPAREN          reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    INTEGER         reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    FLOAT           reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    BOOLEAN         reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    NOT             reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    DEF             reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    IF              reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    WHILE           reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    $end            reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    OUTDENT         reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 31 (assignment -> IDENTIFIER MUL_ASSIGN expression .) ]


state 72

    (32) assignment -> IDENTIFIER DIV_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    IDENTIFIER      reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    LPAREN          reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    INTEGER         reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    FLOAT           reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    BOOLEAN         reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    NOT             reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    DEF             reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    IF              reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    WHILE           reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    $end            reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    OUTDENT         reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 32 (assignment -> IDENTIFIER DIV_ASSIGN expression .) ]


state 73

    (33) assignment -> IDENTIFIER MOD_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    IDENTIFIER      reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    LPAREN          reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    INTEGER         reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    FLOAT           reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    BOOLEAN         reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    NOT             reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    DEF             reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    IF              reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    WHILE           reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    $end            reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    OUTDENT         reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36

  ! MINUS           [ reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 33 (assignment -> IDENTIFIER MOD_ASSIGN expression .) ]


state 74

    (34) expression -> LBRACKET list_elements RBRACKET .

    PLUS            reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    MINUS           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    TIMES           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    DIVIDE          reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    MODULO          reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    GREATER_THAN    reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    LESS_THAN       reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    GREATER_EQUAL   reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    LESS_EQUAL      reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    EQUAL           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    NOT_EQUAL       reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    LBRACKET        reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    RANGE           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    PRINT           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    IDENTIFIER      reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    LPAREN          reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    INTEGER         reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    FLOAT           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    STRING_LITERAL  reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    BOOLEAN         reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    NOT             reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    DEF             reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    IF              reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    WHILE           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    $end            reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    RPAREN          reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    RBRACKET        reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    COMMA           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    COLON           reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)
    OUTDENT         reduce using rule 34 (expression -> LBRACKET list_elements RBRACKET .)


state 75

    (35) list_elements -> list_elements COMMA . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 39
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17

    expression                     shift and go to state 81

state 76

    (45) function_definition -> DEF IDENTIFIER LPAREN . RPAREN COLON block

    RPAREN          shift and go to state 82


state 77

    (41) if_statement -> IF expression COLON . block ELSE COLON block
    (42) if_statement -> IF expression COLON . block
    (44) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 84

    block                          shift and go to state 83

state 78

    (43) while_statement -> WHILE expression COLON . block
    (44) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 84

    block                          shift and go to state 85

state 79

    (37) expression -> expression LBRACKET expression RBRACKET .

    PLUS            reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    MODULO          reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    RANGE           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    INTEGER         reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    STRING_LITERAL  reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    BOOLEAN         reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    DEF             reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    IF              reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    $end            reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)
    OUTDENT         reduce using rule 37 (expression -> expression LBRACKET expression RBRACKET .)


state 80

    (8) statement -> PRINT LPAREN expression RPAREN .

    PRINT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    INTEGER         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    DEF             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    OUTDENT         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)


state 81

    (35) list_elements -> list_elements COMMA expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (37) expression -> expression . LBRACKET expression RBRACKET
    (38) expression -> expression . RANGE expression

    RBRACKET        reduce using rule 35 (list_elements -> list_elements COMMA expression .)
    COMMA           reduce using rule 35 (list_elements -> list_elements COMMA expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27
    MODULO          shift and go to state 28
    GREATER_THAN    shift and go to state 29
    LESS_THAN       shift and go to state 30
    GREATER_EQUAL   shift and go to state 31
    LESS_EQUAL      shift and go to state 32
    EQUAL           shift and go to state 33
    NOT_EQUAL       shift and go to state 34
    LBRACKET        shift and go to state 35
    RANGE           shift and go to state 36


state 82

    (45) function_definition -> DEF IDENTIFIER LPAREN RPAREN . COLON block

    COLON           shift and go to state 86


state 83

    (41) if_statement -> IF expression COLON block . ELSE COLON block
    (42) if_statement -> IF expression COLON block .

    ELSE            shift and go to state 87
    PRINT           reduce using rule 42 (if_statement -> IF expression COLON block .)
    IDENTIFIER      reduce using rule 42 (if_statement -> IF expression COLON block .)
    LPAREN          reduce using rule 42 (if_statement -> IF expression COLON block .)
    INTEGER         reduce using rule 42 (if_statement -> IF expression COLON block .)
    FLOAT           reduce using rule 42 (if_statement -> IF expression COLON block .)
    STRING_LITERAL  reduce using rule 42 (if_statement -> IF expression COLON block .)
    BOOLEAN         reduce using rule 42 (if_statement -> IF expression COLON block .)
    MINUS           reduce using rule 42 (if_statement -> IF expression COLON block .)
    NOT             reduce using rule 42 (if_statement -> IF expression COLON block .)
    LBRACKET        reduce using rule 42 (if_statement -> IF expression COLON block .)
    DEF             reduce using rule 42 (if_statement -> IF expression COLON block .)
    IF              reduce using rule 42 (if_statement -> IF expression COLON block .)
    WHILE           reduce using rule 42 (if_statement -> IF expression COLON block .)
    $end            reduce using rule 42 (if_statement -> IF expression COLON block .)
    OUTDENT         reduce using rule 42 (if_statement -> IF expression COLON block .)


state 84

    (44) block -> INDENT . statements OUTDENT
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (28) assignment -> . IDENTIFIER ASSIGN expression
    (29) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (30) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (31) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (32) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (33) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression
    (39) control_flow -> . if_statement
    (40) control_flow -> . while_statement
    (45) function_definition -> . DEF IDENTIFIER LPAREN RPAREN COLON block
    (41) if_statement -> . IF expression COLON block ELSE COLON block
    (42) if_statement -> . IF expression COLON block
    (43) while_statement -> . WHILE expression COLON block

    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    DEF             shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    statements                     shift and go to state 88
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19

state 85

    (43) while_statement -> WHILE expression COLON block .

    PRINT           reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    IDENTIFIER      reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    LPAREN          reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    INTEGER         reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    FLOAT           reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    STRING_LITERAL  reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    BOOLEAN         reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    MINUS           reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    NOT             reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    LBRACKET        reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    DEF             reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    IF              reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    WHILE           reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    $end            reduce using rule 43 (while_statement -> WHILE expression COLON block .)
    OUTDENT         reduce using rule 43 (while_statement -> WHILE expression COLON block .)


state 86

    (45) function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON . block
    (44) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 84

    block                          shift and go to state 89

state 87

    (41) if_statement -> IF expression COLON block ELSE . COLON block

    COLON           shift and go to state 90


state 88

    (44) block -> INDENT statements . OUTDENT
    (2) statements -> statements . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (28) assignment -> . IDENTIFIER ASSIGN expression
    (29) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (30) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (31) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (32) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (33) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . INTEGER
    (22) expression -> . FLOAT
    (23) expression -> . IDENTIFIER
    (24) expression -> . STRING_LITERAL
    (25) expression -> . BOOLEAN
    (26) expression -> . MINUS expression
    (27) expression -> . NOT expression
    (34) expression -> . LBRACKET list_elements RBRACKET
    (37) expression -> . expression LBRACKET expression RBRACKET
    (38) expression -> . expression RANGE expression
    (39) control_flow -> . if_statement
    (40) control_flow -> . while_statement
    (45) function_definition -> . DEF IDENTIFIER LPAREN RPAREN COLON block
    (41) if_statement -> . IF expression COLON block ELSE COLON block
    (42) if_statement -> . IF expression COLON block
    (43) while_statement -> . WHILE expression COLON block

    OUTDENT         shift and go to state 91
    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    DEF             shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    statement                      shift and go to state 23
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19

state 89

    (45) function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .

    PRINT           reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    IDENTIFIER      reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    LPAREN          reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    INTEGER         reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    FLOAT           reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    STRING_LITERAL  reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    BOOLEAN         reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    MINUS           reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    NOT             reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    LBRACKET        reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    DEF             reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    IF              reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    WHILE           reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    $end            reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)
    OUTDENT         reduce using rule 45 (function_definition -> DEF IDENTIFIER LPAREN RPAREN COLON block .)


state 90

    (41) if_statement -> IF expression COLON block ELSE COLON . block
    (44) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 84

    block                          shift and go to state 92

state 91

    (44) block -> INDENT statements OUTDENT .

    ELSE            reduce using rule 44 (block -> INDENT statements OUTDENT .)
    PRINT           reduce using rule 44 (block -> INDENT statements OUTDENT .)
    IDENTIFIER      reduce using rule 44 (block -> INDENT statements OUTDENT .)
    LPAREN          reduce using rule 44 (block -> INDENT statements OUTDENT .)
    INTEGER         reduce using rule 44 (block -> INDENT statements OUTDENT .)
    FLOAT           reduce using rule 44 (block -> INDENT statements OUTDENT .)
    STRING_LITERAL  reduce using rule 44 (block -> INDENT statements OUTDENT .)
    BOOLEAN         reduce using rule 44 (block -> INDENT statements OUTDENT .)
    MINUS           reduce using rule 44 (block -> INDENT statements OUTDENT .)
    NOT             reduce using rule 44 (block -> INDENT statements OUTDENT .)
    LBRACKET        reduce using rule 44 (block -> INDENT statements OUTDENT .)
    DEF             reduce using rule 44 (block -> INDENT statements OUTDENT .)
    IF              reduce using rule 44 (block -> INDENT statements OUTDENT .)
    WHILE           reduce using rule 44 (block -> INDENT statements OUTDENT .)
    $end            reduce using rule 44 (block -> INDENT statements OUTDENT .)
    OUTDENT         reduce using rule 44 (block -> INDENT statements OUTDENT .)


state 92

    (41) if_statement -> IF expression COLON block ELSE COLON block .

    PRINT           reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    IDENTIFIER      reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    LPAREN          reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    INTEGER         reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    FLOAT           reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    STRING_LITERAL  reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    BOOLEAN         reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    MINUS           reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    NOT             reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    LBRACKET        reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    DEF             reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    IF              reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    WHILE           reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    $end            reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)
    OUTDENT         reduce using rule 41 (if_statement -> IF expression COLON block ELSE COLON block .)

WARNING:
WARNING: Conflicts:
WARNING:
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 65 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 65 resolved as shift
WARNING: shift/reduce conflict for RANGE in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 73 resolved as shift

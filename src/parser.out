Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    CONTINUE
    ELIF
    NEWLINE
    NUMBER
    STRING

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment
Rule 5     statement -> expression
Rule 6     statement -> control_flow
Rule 7     statement -> function_definition
Rule 8     statement -> PRINT LPAREN expression RPAREN
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression TIMES expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> expression MODULO expression
Rule 14    expression -> expression GREATER_THAN expression
Rule 15    expression -> expression LESS_THAN expression
Rule 16    expression -> expression GREATER_EQUAL expression
Rule 17    expression -> expression LESS_EQUAL expression
Rule 18    expression -> expression EQUAL expression
Rule 19    expression -> expression NOT_EQUAL expression
Rule 20    expression -> expression AND expression
Rule 21    expression -> expression OR expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> INTEGER
Rule 24    expression -> FLOAT
Rule 25    expression -> IDENTIFIER
Rule 26    expression -> STRING_LITERAL
Rule 27    expression -> BOOLEAN
Rule 28    expression -> MINUS expression
Rule 29    expression -> NOT expression
Rule 30    expression -> expression QUESTION expression COLON expression
Rule 31    assignment -> IDENTIFIER ASSIGN expression
Rule 32    assignment -> IDENTIFIER ADD_ASSIGN expression
Rule 33    assignment -> IDENTIFIER SUB_ASSIGN expression
Rule 34    assignment -> IDENTIFIER MUL_ASSIGN expression
Rule 35    assignment -> IDENTIFIER DIV_ASSIGN expression
Rule 36    assignment -> IDENTIFIER MOD_ASSIGN expression
Rule 37    expression -> LBRACKET list_elements RBRACKET
Rule 38    list_elements -> list_elements COMMA expression
Rule 39    list_elements -> expression
Rule 40    expression -> expression LBRACKET slice RBRACKET
Rule 41    slice -> expression COLON expression COLON expression
Rule 42    slice -> expression COLON COLON expression
Rule 43    slice -> expression COLON expression
Rule 44    slice -> expression COLON
Rule 45    slice -> COLON COLON expression
Rule 46    slice -> COLON expression
Rule 47    slice -> COLON
Rule 48    slice -> expression
Rule 49    expression -> RANGE LPAREN range_args RPAREN
Rule 50    range_args -> expression COMMA expression COMMA expression
Rule 51    range_args -> expression COMMA expression
Rule 52    range_args -> expression
Rule 53    control_flow -> if_statement
Rule 54    control_flow -> while_statement
Rule 55    control_flow -> for_statement
Rule 56    if_statement -> IF expression COLON block ELSE COLON block
Rule 57    if_statement -> IF expression COLON block
Rule 58    while_statement -> WHILE expression COLON block
Rule 59    for_statement -> FOR IDENTIFIER IN expression COLON block
Rule 60    block -> INDENT statements OUTDENT
Rule 61    function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block
Rule 62    params -> params COMMA IDENTIFIER
Rule 63    params -> IDENTIFIER
Rule 64    params -> empty
Rule 65    empty -> <empty>
Rule 66    expression -> IDENTIFIER LPAREN arguments RPAREN
Rule 67    arguments -> arguments COMMA expression
Rule 68    arguments -> expression
Rule 69    arguments -> empty

Terminals, with rules where they appear

ADD_ASSIGN           : 32
AND                  : 20
ASSIGN               : 31
BOOLEAN              : 27
BREAK                :
COLON                : 30 41 41 42 42 43 44 45 45 46 47 56 56 57 58 59 61
COMMA                : 38 50 50 51 62 67
COMMENT              :
CONTINUE             :
DEF                  : 61
DIVIDE               : 12
DIV_ASSIGN           : 35
ELIF                 :
ELSE                 : 56
EQUAL                : 18
FLOAT                : 24
FOR                  : 59
GREATER_EQUAL        : 16
GREATER_THAN         : 14
IDENTIFIER           : 25 31 32 33 34 35 36 59 61 62 63 66
IF                   : 56 57
IN                   : 59
INDENT               : 60
INTEGER              : 23
LBRACKET             : 37 40
LESS_EQUAL           : 17
LESS_THAN            : 15
LPAREN               : 8 22 49 61 66
MINUS                : 10 28
MODULO               : 13
MOD_ASSIGN           : 36
MUL_ASSIGN           : 34
NEWLINE              :
NOT                  : 29
NOT_EQUAL            : 19
NUMBER               :
OR                   : 21
OUTDENT              : 60
PLUS                 : 9
PRINT                : 8
QUESTION             : 30
RANGE                : 49
RBRACKET             : 37 40
RPAREN               : 8 22 49 61 66
STRING               :
STRING_LITERAL       : 26
SUB_ASSIGN           : 33
TIMES                : 11
WHILE                : 58
error                :

Nonterminals, with rules where they appear

arguments            : 66 67
assignment           : 4
block                : 56 56 57 58 59 61
control_flow         : 6
empty                : 64 69
expression           : 5 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 28 29 30 30 30 31 32 33 34 35 36 38 39 40 41 41 41 42 42 43 43 44 45 46 48 50 50 50 51 51 52 56 57 58 59 67 68
for_statement        : 55
function_definition  : 7
if_statement         : 53
list_elements        : 37 38
params               : 61 62
program              : 0
range_args           : 49
slice                : 40
statement            : 2 3
statements           : 1 2 60
while_statement      : 54

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (31) assignment -> . IDENTIFIER ASSIGN expression
    (32) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (33) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (34) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (35) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (36) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (53) control_flow -> . if_statement
    (54) control_flow -> . while_statement
    (55) control_flow -> . for_statement
    (61) function_definition -> . DEF IDENTIFIER LPAREN params RPAREN COLON block
    (56) if_statement -> . IF expression COLON block ELSE COLON block
    (57) if_statement -> . IF expression COLON block
    (58) while_statement -> . WHILE expression COLON block
    (59) for_statement -> . FOR IDENTIFIER IN expression COLON block

    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18
    DEF             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 19
    while_statement                shift and go to state 20
    for_statement                  shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (31) assignment -> . IDENTIFIER ASSIGN expression
    (32) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (33) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (34) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (35) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (36) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (53) control_flow -> . if_statement
    (54) control_flow -> . while_statement
    (55) control_flow -> . for_statement
    (61) function_definition -> . DEF IDENTIFIER LPAREN params RPAREN COLON block
    (56) if_statement -> . IF expression COLON block ELSE COLON block
    (57) if_statement -> . IF expression COLON block
    (58) while_statement -> . WHILE expression COLON block
    (59) for_statement -> . FOR IDENTIFIER IN expression COLON block

    $end            reduce using rule 1 (program -> statements .)
    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18
    DEF             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 19
    while_statement                shift and go to state 20
    for_statement                  shift and go to state 21

state 3

    (3) statements -> statement .

    PRINT           reduce using rule 3 (statements -> statement .)
    IDENTIFIER      reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    INTEGER         reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    STRING_LITERAL  reduce using rule 3 (statements -> statement .)
    BOOLEAN         reduce using rule 3 (statements -> statement .)
    MINUS           reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    LBRACKET        reduce using rule 3 (statements -> statement .)
    RANGE           reduce using rule 3 (statements -> statement .)
    DEF             reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    FOR             reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    OUTDENT         reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment .

    PRINT           reduce using rule 4 (statement -> assignment .)
    IDENTIFIER      reduce using rule 4 (statement -> assignment .)
    LPAREN          reduce using rule 4 (statement -> assignment .)
    INTEGER         reduce using rule 4 (statement -> assignment .)
    FLOAT           reduce using rule 4 (statement -> assignment .)
    STRING_LITERAL  reduce using rule 4 (statement -> assignment .)
    BOOLEAN         reduce using rule 4 (statement -> assignment .)
    MINUS           reduce using rule 4 (statement -> assignment .)
    NOT             reduce using rule 4 (statement -> assignment .)
    LBRACKET        reduce using rule 4 (statement -> assignment .)
    RANGE           reduce using rule 4 (statement -> assignment .)
    DEF             reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    OUTDENT         reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 5 (statement -> expression .)
    IDENTIFIER      reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    INTEGER         reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    STRING_LITERAL  reduce using rule 5 (statement -> expression .)
    BOOLEAN         reduce using rule 5 (statement -> expression .)
    NOT             reduce using rule 5 (statement -> expression .)
    RANGE           reduce using rule 5 (statement -> expression .)
    DEF             reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    OUTDENT         reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 5 (statement -> expression .) ]
  ! LBRACKET        [ reduce using rule 5 (statement -> expression .) ]


state 6

    (6) statement -> control_flow .

    PRINT           reduce using rule 6 (statement -> control_flow .)
    IDENTIFIER      reduce using rule 6 (statement -> control_flow .)
    LPAREN          reduce using rule 6 (statement -> control_flow .)
    INTEGER         reduce using rule 6 (statement -> control_flow .)
    FLOAT           reduce using rule 6 (statement -> control_flow .)
    STRING_LITERAL  reduce using rule 6 (statement -> control_flow .)
    BOOLEAN         reduce using rule 6 (statement -> control_flow .)
    MINUS           reduce using rule 6 (statement -> control_flow .)
    NOT             reduce using rule 6 (statement -> control_flow .)
    LBRACKET        reduce using rule 6 (statement -> control_flow .)
    RANGE           reduce using rule 6 (statement -> control_flow .)
    DEF             reduce using rule 6 (statement -> control_flow .)
    IF              reduce using rule 6 (statement -> control_flow .)
    WHILE           reduce using rule 6 (statement -> control_flow .)
    FOR             reduce using rule 6 (statement -> control_flow .)
    $end            reduce using rule 6 (statement -> control_flow .)
    OUTDENT         reduce using rule 6 (statement -> control_flow .)


state 7

    (7) statement -> function_definition .

    PRINT           reduce using rule 7 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 7 (statement -> function_definition .)
    LPAREN          reduce using rule 7 (statement -> function_definition .)
    INTEGER         reduce using rule 7 (statement -> function_definition .)
    FLOAT           reduce using rule 7 (statement -> function_definition .)
    STRING_LITERAL  reduce using rule 7 (statement -> function_definition .)
    BOOLEAN         reduce using rule 7 (statement -> function_definition .)
    MINUS           reduce using rule 7 (statement -> function_definition .)
    NOT             reduce using rule 7 (statement -> function_definition .)
    LBRACKET        reduce using rule 7 (statement -> function_definition .)
    RANGE           reduce using rule 7 (statement -> function_definition .)
    DEF             reduce using rule 7 (statement -> function_definition .)
    IF              reduce using rule 7 (statement -> function_definition .)
    WHILE           reduce using rule 7 (statement -> function_definition .)
    FOR             reduce using rule 7 (statement -> function_definition .)
    $end            reduce using rule 7 (statement -> function_definition .)
    OUTDENT         reduce using rule 7 (statement -> function_definition .)


state 8

    (8) statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 42


state 9

    (22) expression -> LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 43

state 10

    (31) assignment -> IDENTIFIER . ASSIGN expression
    (32) assignment -> IDENTIFIER . ADD_ASSIGN expression
    (33) assignment -> IDENTIFIER . SUB_ASSIGN expression
    (34) assignment -> IDENTIFIER . MUL_ASSIGN expression
    (35) assignment -> IDENTIFIER . DIV_ASSIGN expression
    (36) assignment -> IDENTIFIER . MOD_ASSIGN expression
    (25) expression -> IDENTIFIER .
    (66) expression -> IDENTIFIER . LPAREN arguments RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    ASSIGN          shift and go to state 45
    ADD_ASSIGN      shift and go to state 46
    SUB_ASSIGN      shift and go to state 47
    MUL_ASSIGN      shift and go to state 48
    DIV_ASSIGN      shift and go to state 49
    MOD_ASSIGN      shift and go to state 50
    PLUS            reduce using rule 25 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 25 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 25 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 25 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 25 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 25 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 25 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 25 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 25 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 25 (expression -> IDENTIFIER .)
    AND             reduce using rule 25 (expression -> IDENTIFIER .)
    OR              reduce using rule 25 (expression -> IDENTIFIER .)
    QUESTION        reduce using rule 25 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 25 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 25 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 25 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 25 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 25 (expression -> IDENTIFIER .)
    STRING_LITERAL  reduce using rule 25 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 25 (expression -> IDENTIFIER .)
    NOT             reduce using rule 25 (expression -> IDENTIFIER .)
    RANGE           reduce using rule 25 (expression -> IDENTIFIER .)
    DEF             reduce using rule 25 (expression -> IDENTIFIER .)
    IF              reduce using rule 25 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 25 (expression -> IDENTIFIER .)
    FOR             reduce using rule 25 (expression -> IDENTIFIER .)
    $end            reduce using rule 25 (expression -> IDENTIFIER .)
    OUTDENT         reduce using rule 25 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 51

  ! LPAREN          [ reduce using rule 25 (expression -> IDENTIFIER .) ]


state 11

    (28) expression -> MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 52

state 12

    (23) expression -> INTEGER .

    PLUS            reduce using rule 23 (expression -> INTEGER .)
    MINUS           reduce using rule 23 (expression -> INTEGER .)
    TIMES           reduce using rule 23 (expression -> INTEGER .)
    DIVIDE          reduce using rule 23 (expression -> INTEGER .)
    MODULO          reduce using rule 23 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 23 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 23 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 23 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 23 (expression -> INTEGER .)
    EQUAL           reduce using rule 23 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 23 (expression -> INTEGER .)
    AND             reduce using rule 23 (expression -> INTEGER .)
    OR              reduce using rule 23 (expression -> INTEGER .)
    QUESTION        reduce using rule 23 (expression -> INTEGER .)
    LBRACKET        reduce using rule 23 (expression -> INTEGER .)
    PRINT           reduce using rule 23 (expression -> INTEGER .)
    IDENTIFIER      reduce using rule 23 (expression -> INTEGER .)
    LPAREN          reduce using rule 23 (expression -> INTEGER .)
    INTEGER         reduce using rule 23 (expression -> INTEGER .)
    FLOAT           reduce using rule 23 (expression -> INTEGER .)
    STRING_LITERAL  reduce using rule 23 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 23 (expression -> INTEGER .)
    NOT             reduce using rule 23 (expression -> INTEGER .)
    RANGE           reduce using rule 23 (expression -> INTEGER .)
    DEF             reduce using rule 23 (expression -> INTEGER .)
    IF              reduce using rule 23 (expression -> INTEGER .)
    WHILE           reduce using rule 23 (expression -> INTEGER .)
    FOR             reduce using rule 23 (expression -> INTEGER .)
    $end            reduce using rule 23 (expression -> INTEGER .)
    RPAREN          reduce using rule 23 (expression -> INTEGER .)
    RBRACKET        reduce using rule 23 (expression -> INTEGER .)
    COMMA           reduce using rule 23 (expression -> INTEGER .)
    COLON           reduce using rule 23 (expression -> INTEGER .)
    OUTDENT         reduce using rule 23 (expression -> INTEGER .)


state 13

    (24) expression -> FLOAT .

    PLUS            reduce using rule 24 (expression -> FLOAT .)
    MINUS           reduce using rule 24 (expression -> FLOAT .)
    TIMES           reduce using rule 24 (expression -> FLOAT .)
    DIVIDE          reduce using rule 24 (expression -> FLOAT .)
    MODULO          reduce using rule 24 (expression -> FLOAT .)
    GREATER_THAN    reduce using rule 24 (expression -> FLOAT .)
    LESS_THAN       reduce using rule 24 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 24 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 24 (expression -> FLOAT .)
    EQUAL           reduce using rule 24 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 24 (expression -> FLOAT .)
    AND             reduce using rule 24 (expression -> FLOAT .)
    OR              reduce using rule 24 (expression -> FLOAT .)
    QUESTION        reduce using rule 24 (expression -> FLOAT .)
    LBRACKET        reduce using rule 24 (expression -> FLOAT .)
    PRINT           reduce using rule 24 (expression -> FLOAT .)
    IDENTIFIER      reduce using rule 24 (expression -> FLOAT .)
    LPAREN          reduce using rule 24 (expression -> FLOAT .)
    INTEGER         reduce using rule 24 (expression -> FLOAT .)
    FLOAT           reduce using rule 24 (expression -> FLOAT .)
    STRING_LITERAL  reduce using rule 24 (expression -> FLOAT .)
    BOOLEAN         reduce using rule 24 (expression -> FLOAT .)
    NOT             reduce using rule 24 (expression -> FLOAT .)
    RANGE           reduce using rule 24 (expression -> FLOAT .)
    DEF             reduce using rule 24 (expression -> FLOAT .)
    IF              reduce using rule 24 (expression -> FLOAT .)
    WHILE           reduce using rule 24 (expression -> FLOAT .)
    FOR             reduce using rule 24 (expression -> FLOAT .)
    $end            reduce using rule 24 (expression -> FLOAT .)
    RPAREN          reduce using rule 24 (expression -> FLOAT .)
    RBRACKET        reduce using rule 24 (expression -> FLOAT .)
    COMMA           reduce using rule 24 (expression -> FLOAT .)
    COLON           reduce using rule 24 (expression -> FLOAT .)
    OUTDENT         reduce using rule 24 (expression -> FLOAT .)


state 14

    (26) expression -> STRING_LITERAL .

    PLUS            reduce using rule 26 (expression -> STRING_LITERAL .)
    MINUS           reduce using rule 26 (expression -> STRING_LITERAL .)
    TIMES           reduce using rule 26 (expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 26 (expression -> STRING_LITERAL .)
    MODULO          reduce using rule 26 (expression -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 26 (expression -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 26 (expression -> STRING_LITERAL .)
    GREATER_EQUAL   reduce using rule 26 (expression -> STRING_LITERAL .)
    LESS_EQUAL      reduce using rule 26 (expression -> STRING_LITERAL .)
    EQUAL           reduce using rule 26 (expression -> STRING_LITERAL .)
    NOT_EQUAL       reduce using rule 26 (expression -> STRING_LITERAL .)
    AND             reduce using rule 26 (expression -> STRING_LITERAL .)
    OR              reduce using rule 26 (expression -> STRING_LITERAL .)
    QUESTION        reduce using rule 26 (expression -> STRING_LITERAL .)
    LBRACKET        reduce using rule 26 (expression -> STRING_LITERAL .)
    PRINT           reduce using rule 26 (expression -> STRING_LITERAL .)
    IDENTIFIER      reduce using rule 26 (expression -> STRING_LITERAL .)
    LPAREN          reduce using rule 26 (expression -> STRING_LITERAL .)
    INTEGER         reduce using rule 26 (expression -> STRING_LITERAL .)
    FLOAT           reduce using rule 26 (expression -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 26 (expression -> STRING_LITERAL .)
    BOOLEAN         reduce using rule 26 (expression -> STRING_LITERAL .)
    NOT             reduce using rule 26 (expression -> STRING_LITERAL .)
    RANGE           reduce using rule 26 (expression -> STRING_LITERAL .)
    DEF             reduce using rule 26 (expression -> STRING_LITERAL .)
    IF              reduce using rule 26 (expression -> STRING_LITERAL .)
    WHILE           reduce using rule 26 (expression -> STRING_LITERAL .)
    FOR             reduce using rule 26 (expression -> STRING_LITERAL .)
    $end            reduce using rule 26 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 26 (expression -> STRING_LITERAL .)
    RBRACKET        reduce using rule 26 (expression -> STRING_LITERAL .)
    COMMA           reduce using rule 26 (expression -> STRING_LITERAL .)
    COLON           reduce using rule 26 (expression -> STRING_LITERAL .)
    OUTDENT         reduce using rule 26 (expression -> STRING_LITERAL .)


state 15

    (27) expression -> BOOLEAN .

    PLUS            reduce using rule 27 (expression -> BOOLEAN .)
    MINUS           reduce using rule 27 (expression -> BOOLEAN .)
    TIMES           reduce using rule 27 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 27 (expression -> BOOLEAN .)
    MODULO          reduce using rule 27 (expression -> BOOLEAN .)
    GREATER_THAN    reduce using rule 27 (expression -> BOOLEAN .)
    LESS_THAN       reduce using rule 27 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 27 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 27 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 27 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 27 (expression -> BOOLEAN .)
    AND             reduce using rule 27 (expression -> BOOLEAN .)
    OR              reduce using rule 27 (expression -> BOOLEAN .)
    QUESTION        reduce using rule 27 (expression -> BOOLEAN .)
    LBRACKET        reduce using rule 27 (expression -> BOOLEAN .)
    PRINT           reduce using rule 27 (expression -> BOOLEAN .)
    IDENTIFIER      reduce using rule 27 (expression -> BOOLEAN .)
    LPAREN          reduce using rule 27 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 27 (expression -> BOOLEAN .)
    FLOAT           reduce using rule 27 (expression -> BOOLEAN .)
    STRING_LITERAL  reduce using rule 27 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 27 (expression -> BOOLEAN .)
    NOT             reduce using rule 27 (expression -> BOOLEAN .)
    RANGE           reduce using rule 27 (expression -> BOOLEAN .)
    DEF             reduce using rule 27 (expression -> BOOLEAN .)
    IF              reduce using rule 27 (expression -> BOOLEAN .)
    WHILE           reduce using rule 27 (expression -> BOOLEAN .)
    FOR             reduce using rule 27 (expression -> BOOLEAN .)
    $end            reduce using rule 27 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 27 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 27 (expression -> BOOLEAN .)
    COMMA           reduce using rule 27 (expression -> BOOLEAN .)
    COLON           reduce using rule 27 (expression -> BOOLEAN .)
    OUTDENT         reduce using rule 27 (expression -> BOOLEAN .)


state 16

    (29) expression -> NOT . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 53

state 17

    (37) expression -> LBRACKET . list_elements RBRACKET
    (38) list_elements -> . list_elements COMMA expression
    (39) list_elements -> . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    list_elements                  shift and go to state 54
    expression                     shift and go to state 55

state 18

    (49) expression -> RANGE . LPAREN range_args RPAREN

    LPAREN          shift and go to state 56


state 19

    (53) control_flow -> if_statement .

    PRINT           reduce using rule 53 (control_flow -> if_statement .)
    IDENTIFIER      reduce using rule 53 (control_flow -> if_statement .)
    LPAREN          reduce using rule 53 (control_flow -> if_statement .)
    INTEGER         reduce using rule 53 (control_flow -> if_statement .)
    FLOAT           reduce using rule 53 (control_flow -> if_statement .)
    STRING_LITERAL  reduce using rule 53 (control_flow -> if_statement .)
    BOOLEAN         reduce using rule 53 (control_flow -> if_statement .)
    MINUS           reduce using rule 53 (control_flow -> if_statement .)
    NOT             reduce using rule 53 (control_flow -> if_statement .)
    LBRACKET        reduce using rule 53 (control_flow -> if_statement .)
    RANGE           reduce using rule 53 (control_flow -> if_statement .)
    DEF             reduce using rule 53 (control_flow -> if_statement .)
    IF              reduce using rule 53 (control_flow -> if_statement .)
    WHILE           reduce using rule 53 (control_flow -> if_statement .)
    FOR             reduce using rule 53 (control_flow -> if_statement .)
    $end            reduce using rule 53 (control_flow -> if_statement .)
    OUTDENT         reduce using rule 53 (control_flow -> if_statement .)


state 20

    (54) control_flow -> while_statement .

    PRINT           reduce using rule 54 (control_flow -> while_statement .)
    IDENTIFIER      reduce using rule 54 (control_flow -> while_statement .)
    LPAREN          reduce using rule 54 (control_flow -> while_statement .)
    INTEGER         reduce using rule 54 (control_flow -> while_statement .)
    FLOAT           reduce using rule 54 (control_flow -> while_statement .)
    STRING_LITERAL  reduce using rule 54 (control_flow -> while_statement .)
    BOOLEAN         reduce using rule 54 (control_flow -> while_statement .)
    MINUS           reduce using rule 54 (control_flow -> while_statement .)
    NOT             reduce using rule 54 (control_flow -> while_statement .)
    LBRACKET        reduce using rule 54 (control_flow -> while_statement .)
    RANGE           reduce using rule 54 (control_flow -> while_statement .)
    DEF             reduce using rule 54 (control_flow -> while_statement .)
    IF              reduce using rule 54 (control_flow -> while_statement .)
    WHILE           reduce using rule 54 (control_flow -> while_statement .)
    FOR             reduce using rule 54 (control_flow -> while_statement .)
    $end            reduce using rule 54 (control_flow -> while_statement .)
    OUTDENT         reduce using rule 54 (control_flow -> while_statement .)


state 21

    (55) control_flow -> for_statement .

    PRINT           reduce using rule 55 (control_flow -> for_statement .)
    IDENTIFIER      reduce using rule 55 (control_flow -> for_statement .)
    LPAREN          reduce using rule 55 (control_flow -> for_statement .)
    INTEGER         reduce using rule 55 (control_flow -> for_statement .)
    FLOAT           reduce using rule 55 (control_flow -> for_statement .)
    STRING_LITERAL  reduce using rule 55 (control_flow -> for_statement .)
    BOOLEAN         reduce using rule 55 (control_flow -> for_statement .)
    MINUS           reduce using rule 55 (control_flow -> for_statement .)
    NOT             reduce using rule 55 (control_flow -> for_statement .)
    LBRACKET        reduce using rule 55 (control_flow -> for_statement .)
    RANGE           reduce using rule 55 (control_flow -> for_statement .)
    DEF             reduce using rule 55 (control_flow -> for_statement .)
    IF              reduce using rule 55 (control_flow -> for_statement .)
    WHILE           reduce using rule 55 (control_flow -> for_statement .)
    FOR             reduce using rule 55 (control_flow -> for_statement .)
    $end            reduce using rule 55 (control_flow -> for_statement .)
    OUTDENT         reduce using rule 55 (control_flow -> for_statement .)


state 22

    (61) function_definition -> DEF . IDENTIFIER LPAREN params RPAREN COLON block

    IDENTIFIER      shift and go to state 57


state 23

    (56) if_statement -> IF . expression COLON block ELSE COLON block
    (57) if_statement -> IF . expression COLON block
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 58

state 24

    (58) while_statement -> WHILE . expression COLON block
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 59

state 25

    (59) for_statement -> FOR . IDENTIFIER IN expression COLON block

    IDENTIFIER      shift and go to state 60


state 26

    (2) statements -> statements statement .

    PRINT           reduce using rule 2 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    INTEGER         reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 2 (statements -> statements statement .)
    BOOLEAN         reduce using rule 2 (statements -> statements statement .)
    MINUS           reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    LBRACKET        reduce using rule 2 (statements -> statements statement .)
    RANGE           reduce using rule 2 (statements -> statements statement .)
    DEF             reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    FOR             reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    OUTDENT         reduce using rule 2 (statements -> statements statement .)


state 27

    (9) expression -> expression PLUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 61

state 28

    (10) expression -> expression MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 62

state 29

    (11) expression -> expression TIMES . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 63

state 30

    (12) expression -> expression DIVIDE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 64

state 31

    (13) expression -> expression MODULO . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 65

state 32

    (14) expression -> expression GREATER_THAN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 66

state 33

    (15) expression -> expression LESS_THAN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 67

state 34

    (16) expression -> expression GREATER_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 68

state 35

    (17) expression -> expression LESS_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 69

state 36

    (18) expression -> expression EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 70

state 37

    (19) expression -> expression NOT_EQUAL . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 71

state 38

    (20) expression -> expression AND . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 72

state 39

    (21) expression -> expression OR . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 73

state 40

    (30) expression -> expression QUESTION . expression COLON expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 74

state 41

    (40) expression -> expression LBRACKET . slice RBRACKET
    (41) slice -> . expression COLON expression COLON expression
    (42) slice -> . expression COLON COLON expression
    (43) slice -> . expression COLON expression
    (44) slice -> . expression COLON
    (45) slice -> . COLON COLON expression
    (46) slice -> . COLON expression
    (47) slice -> . COLON
    (48) slice -> . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    COLON           shift and go to state 77
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 75
    slice                          shift and go to state 76

state 42

    (8) statement -> PRINT LPAREN . expression RPAREN
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 78

state 43

    (22) expression -> LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 44

    (25) expression -> IDENTIFIER .
    (66) expression -> IDENTIFIER . LPAREN arguments RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 25 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 25 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 25 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 25 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 25 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 25 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 25 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 25 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 25 (expression -> IDENTIFIER .)
    EQUAL           reduce using rule 25 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 25 (expression -> IDENTIFIER .)
    AND             reduce using rule 25 (expression -> IDENTIFIER .)
    OR              reduce using rule 25 (expression -> IDENTIFIER .)
    QUESTION        reduce using rule 25 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 25 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 25 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 25 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 25 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 25 (expression -> IDENTIFIER .)
    STRING_LITERAL  reduce using rule 25 (expression -> IDENTIFIER .)
    BOOLEAN         reduce using rule 25 (expression -> IDENTIFIER .)
    NOT             reduce using rule 25 (expression -> IDENTIFIER .)
    RANGE           reduce using rule 25 (expression -> IDENTIFIER .)
    DEF             reduce using rule 25 (expression -> IDENTIFIER .)
    IF              reduce using rule 25 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 25 (expression -> IDENTIFIER .)
    FOR             reduce using rule 25 (expression -> IDENTIFIER .)
    $end            reduce using rule 25 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 25 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 25 (expression -> IDENTIFIER .)
    COLON           reduce using rule 25 (expression -> IDENTIFIER .)
    OUTDENT         reduce using rule 25 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 51

  ! LPAREN          [ reduce using rule 25 (expression -> IDENTIFIER .) ]


state 45

    (31) assignment -> IDENTIFIER ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 80

state 46

    (32) assignment -> IDENTIFIER ADD_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 81

state 47

    (33) assignment -> IDENTIFIER SUB_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 82

state 48

    (34) assignment -> IDENTIFIER MUL_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 83

state 49

    (35) assignment -> IDENTIFIER DIV_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 84

state 50

    (36) assignment -> IDENTIFIER MOD_ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 85

state 51

    (66) expression -> IDENTIFIER LPAREN . arguments RPAREN
    (67) arguments -> . arguments COMMA expression
    (68) arguments -> . expression
    (69) arguments -> . empty
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (65) empty -> .

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18
    RPAREN          reduce using rule 65 (empty -> .)
    COMMA           reduce using rule 65 (empty -> .)

    arguments                      shift and go to state 86
    expression                     shift and go to state 87
    empty                          shift and go to state 88

state 52

    (28) expression -> MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 28 (expression -> MINUS expression .)
    MINUS           reduce using rule 28 (expression -> MINUS expression .)
    TIMES           reduce using rule 28 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 28 (expression -> MINUS expression .)
    MODULO          reduce using rule 28 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 28 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 28 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> MINUS expression .)
    EQUAL           reduce using rule 28 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> MINUS expression .)
    AND             reduce using rule 28 (expression -> MINUS expression .)
    OR              reduce using rule 28 (expression -> MINUS expression .)
    QUESTION        reduce using rule 28 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 28 (expression -> MINUS expression .)
    PRINT           reduce using rule 28 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 28 (expression -> MINUS expression .)
    LPAREN          reduce using rule 28 (expression -> MINUS expression .)
    INTEGER         reduce using rule 28 (expression -> MINUS expression .)
    FLOAT           reduce using rule 28 (expression -> MINUS expression .)
    STRING_LITERAL  reduce using rule 28 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 28 (expression -> MINUS expression .)
    NOT             reduce using rule 28 (expression -> MINUS expression .)
    RANGE           reduce using rule 28 (expression -> MINUS expression .)
    DEF             reduce using rule 28 (expression -> MINUS expression .)
    IF              reduce using rule 28 (expression -> MINUS expression .)
    WHILE           reduce using rule 28 (expression -> MINUS expression .)
    FOR             reduce using rule 28 (expression -> MINUS expression .)
    $end            reduce using rule 28 (expression -> MINUS expression .)
    RPAREN          reduce using rule 28 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 28 (expression -> MINUS expression .)
    COMMA           reduce using rule 28 (expression -> MINUS expression .)
    COLON           reduce using rule 28 (expression -> MINUS expression .)
    OUTDENT         reduce using rule 28 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULO          [ shift and go to state 31 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 53

    (29) expression -> NOT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    LBRACKET        reduce using rule 29 (expression -> NOT expression .)
    PRINT           reduce using rule 29 (expression -> NOT expression .)
    IDENTIFIER      reduce using rule 29 (expression -> NOT expression .)
    LPAREN          reduce using rule 29 (expression -> NOT expression .)
    INTEGER         reduce using rule 29 (expression -> NOT expression .)
    FLOAT           reduce using rule 29 (expression -> NOT expression .)
    STRING_LITERAL  reduce using rule 29 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 29 (expression -> NOT expression .)
    NOT             reduce using rule 29 (expression -> NOT expression .)
    RANGE           reduce using rule 29 (expression -> NOT expression .)
    DEF             reduce using rule 29 (expression -> NOT expression .)
    IF              reduce using rule 29 (expression -> NOT expression .)
    WHILE           reduce using rule 29 (expression -> NOT expression .)
    FOR             reduce using rule 29 (expression -> NOT expression .)
    $end            reduce using rule 29 (expression -> NOT expression .)
    RPAREN          reduce using rule 29 (expression -> NOT expression .)
    RBRACKET        reduce using rule 29 (expression -> NOT expression .)
    COMMA           reduce using rule 29 (expression -> NOT expression .)
    COLON           reduce using rule 29 (expression -> NOT expression .)
    OUTDENT         reduce using rule 29 (expression -> NOT expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40

  ! PLUS            [ reduce using rule 29 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 29 (expression -> NOT expression .) ]
  ! GREATER_THAN    [ reduce using rule 29 (expression -> NOT expression .) ]
  ! LESS_THAN       [ reduce using rule 29 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 29 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 29 (expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 29 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 29 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 29 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 29 (expression -> NOT expression .) ]
  ! QUESTION        [ reduce using rule 29 (expression -> NOT expression .) ]
  ! LBRACKET        [ shift and go to state 41 ]


state 54

    (37) expression -> LBRACKET list_elements . RBRACKET
    (38) list_elements -> list_elements . COMMA expression

    RBRACKET        shift and go to state 89
    COMMA           shift and go to state 90


state 55

    (39) list_elements -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 39 (list_elements -> expression .)
    COMMA           reduce using rule 39 (list_elements -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 56

    (49) expression -> RANGE LPAREN . range_args RPAREN
    (50) range_args -> . expression COMMA expression COMMA expression
    (51) range_args -> . expression COMMA expression
    (52) range_args -> . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    range_args                     shift and go to state 91
    expression                     shift and go to state 92

state 57

    (61) function_definition -> DEF IDENTIFIER . LPAREN params RPAREN COLON block

    LPAREN          shift and go to state 93


state 58

    (56) if_statement -> IF expression . COLON block ELSE COLON block
    (57) if_statement -> IF expression . COLON block
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 94
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 59

    (58) while_statement -> WHILE expression . COLON block
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 95
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 60

    (59) for_statement -> FOR IDENTIFIER . IN expression COLON block

    IN              shift and go to state 96


state 61

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 9 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 9 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 9 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 9 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 9 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 9 (expression -> expression PLUS expression .)
    AND             reduce using rule 9 (expression -> expression PLUS expression .)
    OR              reduce using rule 9 (expression -> expression PLUS expression .)
    QUESTION        reduce using rule 9 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 9 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 9 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 9 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 9 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 9 (expression -> expression PLUS expression .)
    STRING_LITERAL  reduce using rule 9 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 9 (expression -> expression PLUS expression .)
    NOT             reduce using rule 9 (expression -> expression PLUS expression .)
    RANGE           reduce using rule 9 (expression -> expression PLUS expression .)
    DEF             reduce using rule 9 (expression -> expression PLUS expression .)
    IF              reduce using rule 9 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 9 (expression -> expression PLUS expression .)
    FOR             reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 9 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 9 (expression -> expression PLUS expression .)
    COLON           reduce using rule 9 (expression -> expression PLUS expression .)
    OUTDENT         reduce using rule 9 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! TIMES           [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 62

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 10 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 10 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 10 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 10 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 10 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 10 (expression -> expression MINUS expression .)
    AND             reduce using rule 10 (expression -> expression MINUS expression .)
    OR              reduce using rule 10 (expression -> expression MINUS expression .)
    QUESTION        reduce using rule 10 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 10 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 10 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 10 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 10 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 10 (expression -> expression MINUS expression .)
    STRING_LITERAL  reduce using rule 10 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 10 (expression -> expression MINUS expression .)
    NOT             reduce using rule 10 (expression -> expression MINUS expression .)
    RANGE           reduce using rule 10 (expression -> expression MINUS expression .)
    DEF             reduce using rule 10 (expression -> expression MINUS expression .)
    IF              reduce using rule 10 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 10 (expression -> expression MINUS expression .)
    FOR             reduce using rule 10 (expression -> expression MINUS expression .)
    $end            reduce using rule 10 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 10 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 10 (expression -> expression MINUS expression .)
    COLON           reduce using rule 10 (expression -> expression MINUS expression .)
    OUTDENT         reduce using rule 10 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! TIMES           [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 63

    (11) expression -> expression TIMES expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 11 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 11 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 11 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 11 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 11 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 11 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 11 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 11 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 11 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 11 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 11 (expression -> expression TIMES expression .)
    AND             reduce using rule 11 (expression -> expression TIMES expression .)
    OR              reduce using rule 11 (expression -> expression TIMES expression .)
    QUESTION        reduce using rule 11 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 11 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 11 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 11 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 11 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 11 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 11 (expression -> expression TIMES expression .)
    STRING_LITERAL  reduce using rule 11 (expression -> expression TIMES expression .)
    BOOLEAN         reduce using rule 11 (expression -> expression TIMES expression .)
    NOT             reduce using rule 11 (expression -> expression TIMES expression .)
    RANGE           reduce using rule 11 (expression -> expression TIMES expression .)
    DEF             reduce using rule 11 (expression -> expression TIMES expression .)
    IF              reduce using rule 11 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 11 (expression -> expression TIMES expression .)
    FOR             reduce using rule 11 (expression -> expression TIMES expression .)
    $end            reduce using rule 11 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 11 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 11 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 11 (expression -> expression TIMES expression .)
    COLON           reduce using rule 11 (expression -> expression TIMES expression .)
    OUTDENT         reduce using rule 11 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULO          [ shift and go to state 31 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 64

    (12) expression -> expression DIVIDE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 12 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 12 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 12 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 12 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 12 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 12 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 12 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 12 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 12 (expression -> expression DIVIDE expression .)
    QUESTION        reduce using rule 12 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 12 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 12 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 12 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 12 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 12 (expression -> expression DIVIDE expression .)
    STRING_LITERAL  reduce using rule 12 (expression -> expression DIVIDE expression .)
    BOOLEAN         reduce using rule 12 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 12 (expression -> expression DIVIDE expression .)
    RANGE           reduce using rule 12 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 12 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 12 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 12 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 12 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 12 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 12 (expression -> expression DIVIDE expression .)
    OUTDENT         reduce using rule 12 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULO          [ shift and go to state 31 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 65

    (13) expression -> expression MODULO expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    PLUS            reduce using rule 13 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 13 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 13 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 13 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 13 (expression -> expression MODULO expression .)
    GREATER_THAN    reduce using rule 13 (expression -> expression MODULO expression .)
    LESS_THAN       reduce using rule 13 (expression -> expression MODULO expression .)
    GREATER_EQUAL   reduce using rule 13 (expression -> expression MODULO expression .)
    LESS_EQUAL      reduce using rule 13 (expression -> expression MODULO expression .)
    EQUAL           reduce using rule 13 (expression -> expression MODULO expression .)
    NOT_EQUAL       reduce using rule 13 (expression -> expression MODULO expression .)
    AND             reduce using rule 13 (expression -> expression MODULO expression .)
    OR              reduce using rule 13 (expression -> expression MODULO expression .)
    QUESTION        reduce using rule 13 (expression -> expression MODULO expression .)
    LBRACKET        reduce using rule 13 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 13 (expression -> expression MODULO expression .)
    IDENTIFIER      reduce using rule 13 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 13 (expression -> expression MODULO expression .)
    INTEGER         reduce using rule 13 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 13 (expression -> expression MODULO expression .)
    STRING_LITERAL  reduce using rule 13 (expression -> expression MODULO expression .)
    BOOLEAN         reduce using rule 13 (expression -> expression MODULO expression .)
    NOT             reduce using rule 13 (expression -> expression MODULO expression .)
    RANGE           reduce using rule 13 (expression -> expression MODULO expression .)
    DEF             reduce using rule 13 (expression -> expression MODULO expression .)
    IF              reduce using rule 13 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 13 (expression -> expression MODULO expression .)
    FOR             reduce using rule 13 (expression -> expression MODULO expression .)
    $end            reduce using rule 13 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 13 (expression -> expression MODULO expression .)
    RBRACKET        reduce using rule 13 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 13 (expression -> expression MODULO expression .)
    COLON           reduce using rule 13 (expression -> expression MODULO expression .)
    OUTDENT         reduce using rule 13 (expression -> expression MODULO expression .)

  ! PLUS            [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 28 ]
  ! TIMES           [ shift and go to state 29 ]
  ! DIVIDE          [ shift and go to state 30 ]
  ! MODULO          [ shift and go to state 31 ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 66

    (14) expression -> expression GREATER_THAN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    EQUAL           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    AND             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    OR              reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    QUESTION        reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LBRACKET        reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    PRINT           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    IDENTIFIER      reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    LPAREN          reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    INTEGER         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    FLOAT           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    STRING_LITERAL  reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    BOOLEAN         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    NOT             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RANGE           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    DEF             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    IF              reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    FOR             reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    RBRACKET        reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    COLON           reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    OUTDENT         reduce using rule 14 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! MODULO          [ reduce using rule 14 (expression -> expression GREATER_THAN expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 67

    (15) expression -> expression LESS_THAN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 15 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 15 (expression -> expression LESS_THAN expression .)
    EQUAL           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 15 (expression -> expression LESS_THAN expression .)
    AND             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    OR              reduce using rule 15 (expression -> expression LESS_THAN expression .)
    QUESTION        reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 15 (expression -> expression LESS_THAN expression .)
    PRINT           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    IDENTIFIER      reduce using rule 15 (expression -> expression LESS_THAN expression .)
    LPAREN          reduce using rule 15 (expression -> expression LESS_THAN expression .)
    INTEGER         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    FLOAT           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    STRING_LITERAL  reduce using rule 15 (expression -> expression LESS_THAN expression .)
    BOOLEAN         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    NOT             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RANGE           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    DEF             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    IF              reduce using rule 15 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    FOR             reduce using rule 15 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 15 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 15 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 15 (expression -> expression LESS_THAN expression .)
    OUTDENT         reduce using rule 15 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! MODULO          [ reduce using rule 15 (expression -> expression LESS_THAN expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 68

    (16) expression -> expression GREATER_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    QUESTION        reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LBRACKET        reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    PRINT           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    IDENTIFIER      reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    FLOAT           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    STRING_LITERAL  reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RANGE           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    DEF             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    RBRACKET        reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    OUTDENT         reduce using rule 16 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 16 (expression -> expression GREATER_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 69

    (17) expression -> expression LESS_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    QUESTION        reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LBRACKET        reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    PRINT           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    IDENTIFIER      reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    FLOAT           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    STRING_LITERAL  reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RANGE           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    DEF             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    RBRACKET        reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    OUTDENT         reduce using rule 17 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 17 (expression -> expression LESS_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 70

    (18) expression -> expression EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 18 (expression -> expression EQUAL expression .)
    LESS_THAN       reduce using rule 18 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 18 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 18 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 18 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 18 (expression -> expression EQUAL expression .)
    AND             reduce using rule 18 (expression -> expression EQUAL expression .)
    OR              reduce using rule 18 (expression -> expression EQUAL expression .)
    QUESTION        reduce using rule 18 (expression -> expression EQUAL expression .)
    LBRACKET        reduce using rule 18 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 18 (expression -> expression EQUAL expression .)
    IDENTIFIER      reduce using rule 18 (expression -> expression EQUAL expression .)
    LPAREN          reduce using rule 18 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 18 (expression -> expression EQUAL expression .)
    FLOAT           reduce using rule 18 (expression -> expression EQUAL expression .)
    STRING_LITERAL  reduce using rule 18 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 18 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 18 (expression -> expression EQUAL expression .)
    RANGE           reduce using rule 18 (expression -> expression EQUAL expression .)
    DEF             reduce using rule 18 (expression -> expression EQUAL expression .)
    IF              reduce using rule 18 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 18 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 18 (expression -> expression EQUAL expression .)
    $end            reduce using rule 18 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 18 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 18 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 18 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 18 (expression -> expression EQUAL expression .)
    OUTDENT         reduce using rule 18 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 71

    (19) expression -> expression NOT_EQUAL expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    GREATER_THAN    reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    QUESTION        reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LBRACKET        reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    PRINT           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    IDENTIFIER      reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    LPAREN          reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    FLOAT           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    STRING_LITERAL  reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RANGE           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    DEF             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    RBRACKET        reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    OUTDENT         reduce using rule 19 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31

  ! PLUS            [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression NOT_EQUAL expression .) ]
  ! GREATER_THAN    [ shift and go to state 32 ]
  ! LESS_THAN       [ shift and go to state 33 ]
  ! GREATER_EQUAL   [ shift and go to state 34 ]
  ! LESS_EQUAL      [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]
  ! NOT_EQUAL       [ shift and go to state 37 ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 72

    (20) expression -> expression AND expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    AND             reduce using rule 20 (expression -> expression AND expression .)
    OR              reduce using rule 20 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 20 (expression -> expression AND expression .)
    PRINT           reduce using rule 20 (expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 20 (expression -> expression AND expression .)
    LPAREN          reduce using rule 20 (expression -> expression AND expression .)
    INTEGER         reduce using rule 20 (expression -> expression AND expression .)
    FLOAT           reduce using rule 20 (expression -> expression AND expression .)
    STRING_LITERAL  reduce using rule 20 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 20 (expression -> expression AND expression .)
    NOT             reduce using rule 20 (expression -> expression AND expression .)
    RANGE           reduce using rule 20 (expression -> expression AND expression .)
    DEF             reduce using rule 20 (expression -> expression AND expression .)
    IF              reduce using rule 20 (expression -> expression AND expression .)
    WHILE           reduce using rule 20 (expression -> expression AND expression .)
    FOR             reduce using rule 20 (expression -> expression AND expression .)
    $end            reduce using rule 20 (expression -> expression AND expression .)
    RPAREN          reduce using rule 20 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 20 (expression -> expression AND expression .)
    COMMA           reduce using rule 20 (expression -> expression AND expression .)
    COLON           reduce using rule 20 (expression -> expression AND expression .)
    OUTDENT         reduce using rule 20 (expression -> expression AND expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    QUESTION        shift and go to state 40

  ! PLUS            [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! QUESTION        [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 73

    (21) expression -> expression OR expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    OR              reduce using rule 21 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 21 (expression -> expression OR expression .)
    PRINT           reduce using rule 21 (expression -> expression OR expression .)
    IDENTIFIER      reduce using rule 21 (expression -> expression OR expression .)
    LPAREN          reduce using rule 21 (expression -> expression OR expression .)
    INTEGER         reduce using rule 21 (expression -> expression OR expression .)
    FLOAT           reduce using rule 21 (expression -> expression OR expression .)
    STRING_LITERAL  reduce using rule 21 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 21 (expression -> expression OR expression .)
    NOT             reduce using rule 21 (expression -> expression OR expression .)
    RANGE           reduce using rule 21 (expression -> expression OR expression .)
    DEF             reduce using rule 21 (expression -> expression OR expression .)
    IF              reduce using rule 21 (expression -> expression OR expression .)
    WHILE           reduce using rule 21 (expression -> expression OR expression .)
    FOR             reduce using rule 21 (expression -> expression OR expression .)
    $end            reduce using rule 21 (expression -> expression OR expression .)
    RPAREN          reduce using rule 21 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 21 (expression -> expression OR expression .)
    COMMA           reduce using rule 21 (expression -> expression OR expression .)
    COLON           reduce using rule 21 (expression -> expression OR expression .)
    OUTDENT         reduce using rule 21 (expression -> expression OR expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    QUESTION        shift and go to state 40

  ! PLUS            [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! QUESTION        [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 39 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 74

    (30) expression -> expression QUESTION expression . COLON expression
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 97
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 75

    (41) slice -> expression . COLON expression COLON expression
    (42) slice -> expression . COLON COLON expression
    (43) slice -> expression . COLON expression
    (44) slice -> expression . COLON
    (48) slice -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 98
    RBRACKET        reduce using rule 48 (slice -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 76

    (40) expression -> expression LBRACKET slice . RBRACKET

    RBRACKET        shift and go to state 99


state 77

    (45) slice -> COLON . COLON expression
    (46) slice -> COLON . expression
    (47) slice -> COLON .
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    COLON           shift and go to state 100
    RBRACKET        reduce using rule 47 (slice -> COLON .)
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 101

state 78

    (8) statement -> PRINT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 79

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    QUESTION        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    OUTDENT         reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 80

    (31) assignment -> IDENTIFIER ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    INTEGER         reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    FLOAT           reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    STRING_LITERAL  reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    BOOLEAN         reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    NOT             reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    RANGE           reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    DEF             reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    FOR             reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    OUTDENT         reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 31 (assignment -> IDENTIFIER ASSIGN expression .) ]


state 81

    (32) assignment -> IDENTIFIER ADD_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    IDENTIFIER      reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    LPAREN          reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    INTEGER         reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    FLOAT           reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    BOOLEAN         reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    NOT             reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    RANGE           reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    DEF             reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    IF              reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    WHILE           reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    FOR             reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    $end            reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    OUTDENT         reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 32 (assignment -> IDENTIFIER ADD_ASSIGN expression .) ]


state 82

    (33) assignment -> IDENTIFIER SUB_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    IDENTIFIER      reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    LPAREN          reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    INTEGER         reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    FLOAT           reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    BOOLEAN         reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    NOT             reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    RANGE           reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    DEF             reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    IF              reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    WHILE           reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    FOR             reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    $end            reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    OUTDENT         reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 33 (assignment -> IDENTIFIER SUB_ASSIGN expression .) ]


state 83

    (34) assignment -> IDENTIFIER MUL_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    IDENTIFIER      reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    LPAREN          reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    INTEGER         reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    FLOAT           reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    BOOLEAN         reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    NOT             reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    RANGE           reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    DEF             reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    IF              reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    WHILE           reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    FOR             reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    $end            reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    OUTDENT         reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 34 (assignment -> IDENTIFIER MUL_ASSIGN expression .) ]


state 84

    (35) assignment -> IDENTIFIER DIV_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    IDENTIFIER      reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    LPAREN          reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    INTEGER         reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    FLOAT           reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    BOOLEAN         reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    NOT             reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    RANGE           reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    DEF             reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    IF              reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    WHILE           reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    FOR             reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    $end            reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    OUTDENT         reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 35 (assignment -> IDENTIFIER DIV_ASSIGN expression .) ]


state 85

    (36) assignment -> IDENTIFIER MOD_ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    PRINT           reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    IDENTIFIER      reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    LPAREN          reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    INTEGER         reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    FLOAT           reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    STRING_LITERAL  reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    BOOLEAN         reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    NOT             reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    RANGE           reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    DEF             reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    IF              reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    WHILE           reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    FOR             reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    $end            reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    OUTDENT         reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41

  ! MINUS           [ reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 36 (assignment -> IDENTIFIER MOD_ASSIGN expression .) ]


state 86

    (66) expression -> IDENTIFIER LPAREN arguments . RPAREN
    (67) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 103
    COMMA           shift and go to state 104


state 87

    (68) arguments -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RPAREN          reduce using rule 68 (arguments -> expression .)
    COMMA           reduce using rule 68 (arguments -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 88

    (69) arguments -> empty .

    RPAREN          reduce using rule 69 (arguments -> empty .)
    COMMA           reduce using rule 69 (arguments -> empty .)


state 89

    (37) expression -> LBRACKET list_elements RBRACKET .

    PLUS            reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    MINUS           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    TIMES           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    DIVIDE          reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    MODULO          reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    GREATER_THAN    reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    LESS_THAN       reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    GREATER_EQUAL   reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    LESS_EQUAL      reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    EQUAL           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    NOT_EQUAL       reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    AND             reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    OR              reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    QUESTION        reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    LBRACKET        reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    PRINT           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    IDENTIFIER      reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    LPAREN          reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    INTEGER         reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    FLOAT           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    STRING_LITERAL  reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    BOOLEAN         reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    NOT             reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    RANGE           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    DEF             reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    IF              reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    WHILE           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    FOR             reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    $end            reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    RPAREN          reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    RBRACKET        reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    COMMA           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    COLON           reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)
    OUTDENT         reduce using rule 37 (expression -> LBRACKET list_elements RBRACKET .)


state 90

    (38) list_elements -> list_elements COMMA . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 105

state 91

    (49) expression -> RANGE LPAREN range_args . RPAREN

    RPAREN          shift and go to state 106


state 92

    (50) range_args -> expression . COMMA expression COMMA expression
    (51) range_args -> expression . COMMA expression
    (52) range_args -> expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COMMA           shift and go to state 107
    RPAREN          reduce using rule 52 (range_args -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 93

    (61) function_definition -> DEF IDENTIFIER LPAREN . params RPAREN COLON block
    (62) params -> . params COMMA IDENTIFIER
    (63) params -> . IDENTIFIER
    (64) params -> . empty
    (65) empty -> .

    IDENTIFIER      shift and go to state 108
    RPAREN          reduce using rule 65 (empty -> .)
    COMMA           reduce using rule 65 (empty -> .)

    params                         shift and go to state 109
    empty                          shift and go to state 110

state 94

    (56) if_statement -> IF expression COLON . block ELSE COLON block
    (57) if_statement -> IF expression COLON . block
    (60) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 112

    block                          shift and go to state 111

state 95

    (58) while_statement -> WHILE expression COLON . block
    (60) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 112

    block                          shift and go to state 113

state 96

    (59) for_statement -> FOR IDENTIFIER IN . expression COLON block
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 114

state 97

    (30) expression -> expression QUESTION expression COLON . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 115

state 98

    (41) slice -> expression COLON . expression COLON expression
    (42) slice -> expression COLON . COLON expression
    (43) slice -> expression COLON . expression
    (44) slice -> expression COLON .
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    COLON           shift and go to state 117
    RBRACKET        reduce using rule 44 (slice -> expression COLON .)
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 116

state 99

    (40) expression -> expression LBRACKET slice RBRACKET .

    PLUS            reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    MINUS           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    TIMES           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    DIVIDE          reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    MODULO          reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    GREATER_THAN    reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    LESS_THAN       reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    EQUAL           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    AND             reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    OR              reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    QUESTION        reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    LBRACKET        reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    PRINT           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    IDENTIFIER      reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    LPAREN          reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    INTEGER         reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    FLOAT           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    STRING_LITERAL  reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    BOOLEAN         reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    NOT             reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    RANGE           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    DEF             reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    IF              reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    WHILE           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    FOR             reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    $end            reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    RPAREN          reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    RBRACKET        reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    COMMA           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    COLON           reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)
    OUTDENT         reduce using rule 40 (expression -> expression LBRACKET slice RBRACKET .)


state 100

    (45) slice -> COLON COLON . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 118

state 101

    (46) slice -> COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 46 (slice -> COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 102

    (8) statement -> PRINT LPAREN expression RPAREN .

    PRINT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    INTEGER         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    BOOLEAN         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    RANGE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    DEF             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)
    OUTDENT         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN .)


state 103

    (66) expression -> IDENTIFIER LPAREN arguments RPAREN .

    PLUS            reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    MINUS           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    TIMES           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    MODULO          reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    GREATER_THAN    reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LESS_THAN       reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    GREATER_EQUAL   reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LESS_EQUAL      reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    EQUAL           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    NOT_EQUAL       reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    AND             reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    OR              reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    QUESTION        reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    PRINT           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    IDENTIFIER      reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    INTEGER         reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    FLOAT           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    STRING_LITERAL  reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    BOOLEAN         reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    NOT             reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RANGE           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    DEF             reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    IF              reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    WHILE           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    FOR             reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    $end            reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    COMMA           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    COLON           reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)
    OUTDENT         reduce using rule 66 (expression -> IDENTIFIER LPAREN arguments RPAREN .)


state 104

    (67) arguments -> arguments COMMA . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 119

state 105

    (38) list_elements -> list_elements COMMA expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 38 (list_elements -> list_elements COMMA expression .)
    COMMA           reduce using rule 38 (list_elements -> list_elements COMMA expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 106

    (49) expression -> RANGE LPAREN range_args RPAREN .

    PLUS            reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    MINUS           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    TIMES           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    MODULO          reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    GREATER_THAN    reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    LESS_THAN       reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    GREATER_EQUAL   reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    LESS_EQUAL      reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    EQUAL           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    NOT_EQUAL       reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    AND             reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    OR              reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    QUESTION        reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    LBRACKET        reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    PRINT           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    IDENTIFIER      reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    LPAREN          reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    INTEGER         reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    FLOAT           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    STRING_LITERAL  reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    BOOLEAN         reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    NOT             reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    RANGE           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    DEF             reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    IF              reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    WHILE           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    FOR             reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    $end            reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    RPAREN          reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    RBRACKET        reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    COMMA           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    COLON           reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)
    OUTDENT         reduce using rule 49 (expression -> RANGE LPAREN range_args RPAREN .)


state 107

    (50) range_args -> expression COMMA . expression COMMA expression
    (51) range_args -> expression COMMA . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 120

state 108

    (63) params -> IDENTIFIER .

    RPAREN          reduce using rule 63 (params -> IDENTIFIER .)
    COMMA           reduce using rule 63 (params -> IDENTIFIER .)


state 109

    (61) function_definition -> DEF IDENTIFIER LPAREN params . RPAREN COLON block
    (62) params -> params . COMMA IDENTIFIER

    RPAREN          shift and go to state 121
    COMMA           shift and go to state 122


state 110

    (64) params -> empty .

    RPAREN          reduce using rule 64 (params -> empty .)
    COMMA           reduce using rule 64 (params -> empty .)


state 111

    (56) if_statement -> IF expression COLON block . ELSE COLON block
    (57) if_statement -> IF expression COLON block .

    ELSE            shift and go to state 123
    PRINT           reduce using rule 57 (if_statement -> IF expression COLON block .)
    IDENTIFIER      reduce using rule 57 (if_statement -> IF expression COLON block .)
    LPAREN          reduce using rule 57 (if_statement -> IF expression COLON block .)
    INTEGER         reduce using rule 57 (if_statement -> IF expression COLON block .)
    FLOAT           reduce using rule 57 (if_statement -> IF expression COLON block .)
    STRING_LITERAL  reduce using rule 57 (if_statement -> IF expression COLON block .)
    BOOLEAN         reduce using rule 57 (if_statement -> IF expression COLON block .)
    MINUS           reduce using rule 57 (if_statement -> IF expression COLON block .)
    NOT             reduce using rule 57 (if_statement -> IF expression COLON block .)
    LBRACKET        reduce using rule 57 (if_statement -> IF expression COLON block .)
    RANGE           reduce using rule 57 (if_statement -> IF expression COLON block .)
    DEF             reduce using rule 57 (if_statement -> IF expression COLON block .)
    IF              reduce using rule 57 (if_statement -> IF expression COLON block .)
    WHILE           reduce using rule 57 (if_statement -> IF expression COLON block .)
    FOR             reduce using rule 57 (if_statement -> IF expression COLON block .)
    $end            reduce using rule 57 (if_statement -> IF expression COLON block .)
    OUTDENT         reduce using rule 57 (if_statement -> IF expression COLON block .)


state 112

    (60) block -> INDENT . statements OUTDENT
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (31) assignment -> . IDENTIFIER ASSIGN expression
    (32) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (33) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (34) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (35) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (36) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (53) control_flow -> . if_statement
    (54) control_flow -> . while_statement
    (55) control_flow -> . for_statement
    (61) function_definition -> . DEF IDENTIFIER LPAREN params RPAREN COLON block
    (56) if_statement -> . IF expression COLON block ELSE COLON block
    (57) if_statement -> . IF expression COLON block
    (58) while_statement -> . WHILE expression COLON block
    (59) for_statement -> . FOR IDENTIFIER IN expression COLON block

    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18
    DEF             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statements                     shift and go to state 124
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 19
    while_statement                shift and go to state 20
    for_statement                  shift and go to state 21

state 113

    (58) while_statement -> WHILE expression COLON block .

    PRINT           reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    IDENTIFIER      reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    LPAREN          reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    INTEGER         reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    FLOAT           reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    STRING_LITERAL  reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    BOOLEAN         reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    MINUS           reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    NOT             reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    LBRACKET        reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    RANGE           reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    DEF             reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    IF              reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    WHILE           reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    FOR             reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    $end            reduce using rule 58 (while_statement -> WHILE expression COLON block .)
    OUTDENT         reduce using rule 58 (while_statement -> WHILE expression COLON block .)


state 114

    (59) for_statement -> FOR IDENTIFIER IN expression . COLON block
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 125
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 115

    (30) expression -> expression QUESTION expression COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    AND             reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    OR              reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    QUESTION        reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    LBRACKET        reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    PRINT           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    IDENTIFIER      reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    LPAREN          reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    INTEGER         reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    FLOAT           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    STRING_LITERAL  reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    BOOLEAN         reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    NOT             reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    RANGE           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    DEF             reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    IF              reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    WHILE           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    FOR             reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    $end            reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    RPAREN          reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    RBRACKET        reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    COMMA           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    COLON           reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    OUTDENT         reduce using rule 30 (expression -> expression QUESTION expression COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37

  ! PLUS            [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! GREATER_THAN    [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! LESS_THAN       [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! LESS_EQUAL      [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! EQUAL           [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! NOT_EQUAL       [ reduce using rule 30 (expression -> expression QUESTION expression COLON expression .) ]
  ! AND             [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! QUESTION        [ shift and go to state 40 ]
  ! LBRACKET        [ shift and go to state 41 ]


state 116

    (41) slice -> expression COLON expression . COLON expression
    (43) slice -> expression COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COLON           shift and go to state 126
    RBRACKET        reduce using rule 43 (slice -> expression COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 117

    (42) slice -> expression COLON COLON . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 127

state 118

    (45) slice -> COLON COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 45 (slice -> COLON COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 119

    (67) arguments -> arguments COMMA expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RPAREN          reduce using rule 67 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 67 (arguments -> arguments COMMA expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 120

    (50) range_args -> expression COMMA expression . COMMA expression
    (51) range_args -> expression COMMA expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 51 (range_args -> expression COMMA expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 121

    (61) function_definition -> DEF IDENTIFIER LPAREN params RPAREN . COLON block

    COLON           shift and go to state 129


state 122

    (62) params -> params COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 130


state 123

    (56) if_statement -> IF expression COLON block ELSE . COLON block

    COLON           shift and go to state 131


state 124

    (60) block -> INDENT statements . OUTDENT
    (2) statements -> statements . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . control_flow
    (7) statement -> . function_definition
    (8) statement -> . PRINT LPAREN expression RPAREN
    (31) assignment -> . IDENTIFIER ASSIGN expression
    (32) assignment -> . IDENTIFIER ADD_ASSIGN expression
    (33) assignment -> . IDENTIFIER SUB_ASSIGN expression
    (34) assignment -> . IDENTIFIER MUL_ASSIGN expression
    (35) assignment -> . IDENTIFIER DIV_ASSIGN expression
    (36) assignment -> . IDENTIFIER MOD_ASSIGN expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN
    (53) control_flow -> . if_statement
    (54) control_flow -> . while_statement
    (55) control_flow -> . for_statement
    (61) function_definition -> . DEF IDENTIFIER LPAREN params RPAREN COLON block
    (56) if_statement -> . IF expression COLON block ELSE COLON block
    (57) if_statement -> . IF expression COLON block
    (58) while_statement -> . WHILE expression COLON block
    (59) for_statement -> . FOR IDENTIFIER IN expression COLON block

    OUTDENT         shift and go to state 132
    PRINT           shift and go to state 8
    IDENTIFIER      shift and go to state 10
    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18
    DEF             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    control_flow                   shift and go to state 6
    function_definition            shift and go to state 7
    if_statement                   shift and go to state 19
    while_statement                shift and go to state 20
    for_statement                  shift and go to state 21

state 125

    (59) for_statement -> FOR IDENTIFIER IN expression COLON . block
    (60) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 112

    block                          shift and go to state 133

state 126

    (41) slice -> expression COLON expression COLON . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 134

state 127

    (42) slice -> expression COLON COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 42 (slice -> expression COLON COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 128

    (50) range_args -> expression COMMA expression COMMA . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression TIMES expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression MODULO expression
    (14) expression -> . expression GREATER_THAN expression
    (15) expression -> . expression LESS_THAN expression
    (16) expression -> . expression GREATER_EQUAL expression
    (17) expression -> . expression LESS_EQUAL expression
    (18) expression -> . expression EQUAL expression
    (19) expression -> . expression NOT_EQUAL expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . INTEGER
    (24) expression -> . FLOAT
    (25) expression -> . IDENTIFIER
    (26) expression -> . STRING_LITERAL
    (27) expression -> . BOOLEAN
    (28) expression -> . MINUS expression
    (29) expression -> . NOT expression
    (30) expression -> . expression QUESTION expression COLON expression
    (37) expression -> . LBRACKET list_elements RBRACKET
    (40) expression -> . expression LBRACKET slice RBRACKET
    (49) expression -> . RANGE LPAREN range_args RPAREN
    (66) expression -> . IDENTIFIER LPAREN arguments RPAREN

    LPAREN          shift and go to state 9
    INTEGER         shift and go to state 12
    FLOAT           shift and go to state 13
    IDENTIFIER      shift and go to state 44
    STRING_LITERAL  shift and go to state 14
    BOOLEAN         shift and go to state 15
    MINUS           shift and go to state 11
    NOT             shift and go to state 16
    LBRACKET        shift and go to state 17
    RANGE           shift and go to state 18

    expression                     shift and go to state 135

state 129

    (61) function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON . block
    (60) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 112

    block                          shift and go to state 136

state 130

    (62) params -> params COMMA IDENTIFIER .

    RPAREN          reduce using rule 62 (params -> params COMMA IDENTIFIER .)
    COMMA           reduce using rule 62 (params -> params COMMA IDENTIFIER .)


state 131

    (56) if_statement -> IF expression COLON block ELSE COLON . block
    (60) block -> . INDENT statements OUTDENT

    INDENT          shift and go to state 112

    block                          shift and go to state 137

state 132

    (60) block -> INDENT statements OUTDENT .

    ELSE            reduce using rule 60 (block -> INDENT statements OUTDENT .)
    PRINT           reduce using rule 60 (block -> INDENT statements OUTDENT .)
    IDENTIFIER      reduce using rule 60 (block -> INDENT statements OUTDENT .)
    LPAREN          reduce using rule 60 (block -> INDENT statements OUTDENT .)
    INTEGER         reduce using rule 60 (block -> INDENT statements OUTDENT .)
    FLOAT           reduce using rule 60 (block -> INDENT statements OUTDENT .)
    STRING_LITERAL  reduce using rule 60 (block -> INDENT statements OUTDENT .)
    BOOLEAN         reduce using rule 60 (block -> INDENT statements OUTDENT .)
    MINUS           reduce using rule 60 (block -> INDENT statements OUTDENT .)
    NOT             reduce using rule 60 (block -> INDENT statements OUTDENT .)
    LBRACKET        reduce using rule 60 (block -> INDENT statements OUTDENT .)
    RANGE           reduce using rule 60 (block -> INDENT statements OUTDENT .)
    DEF             reduce using rule 60 (block -> INDENT statements OUTDENT .)
    IF              reduce using rule 60 (block -> INDENT statements OUTDENT .)
    WHILE           reduce using rule 60 (block -> INDENT statements OUTDENT .)
    FOR             reduce using rule 60 (block -> INDENT statements OUTDENT .)
    $end            reduce using rule 60 (block -> INDENT statements OUTDENT .)
    OUTDENT         reduce using rule 60 (block -> INDENT statements OUTDENT .)


state 133

    (59) for_statement -> FOR IDENTIFIER IN expression COLON block .

    PRINT           reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    IDENTIFIER      reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    LPAREN          reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    INTEGER         reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    FLOAT           reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    STRING_LITERAL  reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    BOOLEAN         reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    MINUS           reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    NOT             reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    LBRACKET        reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    RANGE           reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    DEF             reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    IF              reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    WHILE           reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    FOR             reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    $end            reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)
    OUTDENT         reduce using rule 59 (for_statement -> FOR IDENTIFIER IN expression COLON block .)


state 134

    (41) slice -> expression COLON expression COLON expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RBRACKET        reduce using rule 41 (slice -> expression COLON expression COLON expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 135

    (50) range_args -> expression COMMA expression COMMA expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . TIMES expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . MODULO expression
    (14) expression -> expression . GREATER_THAN expression
    (15) expression -> expression . LESS_THAN expression
    (16) expression -> expression . GREATER_EQUAL expression
    (17) expression -> expression . LESS_EQUAL expression
    (18) expression -> expression . EQUAL expression
    (19) expression -> expression . NOT_EQUAL expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (30) expression -> expression . QUESTION expression COLON expression
    (40) expression -> expression . LBRACKET slice RBRACKET

    RPAREN          reduce using rule 50 (range_args -> expression COMMA expression COMMA expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31
    GREATER_THAN    shift and go to state 32
    LESS_THAN       shift and go to state 33
    GREATER_EQUAL   shift and go to state 34
    LESS_EQUAL      shift and go to state 35
    EQUAL           shift and go to state 36
    NOT_EQUAL       shift and go to state 37
    AND             shift and go to state 38
    OR              shift and go to state 39
    QUESTION        shift and go to state 40
    LBRACKET        shift and go to state 41


state 136

    (61) function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .

    PRINT           reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    IDENTIFIER      reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    LPAREN          reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    INTEGER         reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    FLOAT           reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    STRING_LITERAL  reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    BOOLEAN         reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    MINUS           reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    NOT             reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    LBRACKET        reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    RANGE           reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    DEF             reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    IF              reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    WHILE           reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    FOR             reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    $end            reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)
    OUTDENT         reduce using rule 61 (function_definition -> DEF IDENTIFIER LPAREN params RPAREN COLON block .)


state 137

    (56) if_statement -> IF expression COLON block ELSE COLON block .

    PRINT           reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    IDENTIFIER      reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    LPAREN          reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    INTEGER         reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    FLOAT           reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    STRING_LITERAL  reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    BOOLEAN         reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    MINUS           reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    NOT             reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    LBRACKET        reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    RANGE           reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    DEF             reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    IF              reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    WHILE           reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    FOR             reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    $end            reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)
    OUTDENT         reduce using rule 56 (if_statement -> IF expression COLON block ELSE COLON block .)

WARNING:
WARNING: Conflicts:
WARNING:
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 5 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 10 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 85 resolved as shift
